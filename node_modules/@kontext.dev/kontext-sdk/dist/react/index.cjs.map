{"version":3,"sources":["../../src/client/trpc.ts","../../src/client/client.ts","../../src/react/context.tsx","../../src/react/use-realtime-context.tsx","../../src/hooks/useThemeDetection.ts","../../src/components/styles.ts","../../src/components/KontextConnectButton.tsx","../../src/components/KontextStatus.tsx"],"names":["createTRPCClient","apiUrl","apiKeyOrToken","isApiKey","createTRPCProxyClient","httpBatchLink","superjson","url","options","Persona","config","userId","task","maxTokens","privacyLevel","authenticatedTrpc","response","error","message","code","statusCode","trpc","createTRPCReact","KontextContext","createContext","PROFILE_TTL","KontextContextProvider","apiKey","children","isConnected","setIsConnected","useState","setUserId","isLoading","setIsLoading","setError","systemPrompt","setSystemPrompt","profileLastUpdated","setProfileLastUpdated","isRefreshingProfile","setIsRefreshingProfile","persona","React","isProfileStale","fetchProfile","useCallback","context","err","checkConnection","userIdFromUrl","storedUserId","useEffect","connectGmail","errorMsg","currentUrl","redirectUri","fetchErr","data","errorData","errorMessage","disconnect","refreshProfile","value","jsx","KontextProvider","queryClient","QueryClient","failureCount","trpcClient","QueryClientProvider","useKontext","useContext","useKontextProfile","useRealtimeContext","useQueryClient","state","setState","enabled","onUpdate","onUpdateRef","useRef","isMountedRef","isCleanedUp","wsUrl","wsClient","createWSClient","splitLink","op","wsLink","subscription","event","prev","usePollingContext","intervalMs","isPolling","setIsPolling","interval","useThemeDetection","initialTheme","onThemeChange","theme","setTheme","observerRef","mediaQueryRef","detectThemeRef","onThemeChangeRef","detectTheme","newTheme","observer","mediaQuery","designTokens","typography","spacing","borderRadius","transitions","elevation","buttonSizes","KontextConnectButton","className","variant","size","fullWidth","onError","isHovered","setIsHovered","isConnecting","setIsConnecting","showError","setShowError","tokens","handleConnect","variantStyles","baseStyles","hoverStyles","sizeStyles","buttonStyles","LoadingSpinner","jsxs","errorTooltipStyles","Fragment","e","KontextStatus","connectedText","disconnectedText","showDisconnect","disconnectClassName","isDisconnectHovered","setIsDisconnectHovered","isDark","containerStyles","loadingStyles","statusIndicatorStyles","statusTextStyles","disconnectButtonStyles"],"mappings":"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","file":"index.cjs","sourcesContent":["import { createTRPCProxyClient, httpBatchLink } from '@trpc/client';\nimport superjson from 'superjson';\n\n/**\n * Creates a tRPC client for the Kontext SDK\n *\n * @param apiUrl - The API endpoint URL\n * @param apiKeyOrToken - API key (ktext_*) or session token for authentication\n */\nexport function createTRPCClient(apiUrl: string, apiKeyOrToken: string) {\n  // Check if this is an API key (starts with ktext) or a session token\n  const isApiKey = apiKeyOrToken.startsWith('ktext');\n\n  // Use 'any' type here to avoid internal dependency issues\n  // The SDK will have proper type safety through the wrapper client class\n  return createTRPCProxyClient<any>({\n    links: [\n      httpBatchLink({\n        url: `${apiUrl}/trpc`,\n        transformer: superjson,\n        maxItems: 10, // Maximum number of operations in a single batch\n        maxURLLength: 2083, // Prevent URLs from becoming too long\n        async headers() {\n          if (isApiKey) {\n            // Use x-api-key header for API key authentication\n            return {\n              'x-api-key': apiKeyOrToken,\n            };\n          } else {\n            // For session tokens, use Authorization Bearer format\n            return {\n              Authorization: `Bearer ${apiKeyOrToken}`,\n            };\n          }\n        },\n        fetch(url, options) {\n          return fetch(url, {\n            ...options,\n            // Add connection pooling for better performance\n            keepalive: true,\n          });\n        },\n      }),\n    ],\n  });\n}\n\nexport type KontextTRPCClient = ReturnType<typeof createTRPCClient>;\n","import type { PersonaConfig, GetContextOptions, PersonaError, Context } from './types';\nimport { createTRPCClient } from './trpc';\n\n/**\n * Main Persona SDK client\n * Provides a simple API for developers to get personalized context\n */\nexport class Persona {\n  private config: Required<PersonaConfig>;\n\n  constructor(config: PersonaConfig) {\n    // Validate that API key is provided\n    if (!config.apiKey) {\n      throw new Error('Persona API key is required');\n    }\n\n    // Set defaults\n    this.config = {\n      apiKey: config.apiKey,\n      providers: config.providers || ['gmail', 'preferences'],\n      apiUrl: config.apiUrl || 'https://api.kontext.dev',\n      cache: {\n        ttl: config.cache?.ttl || 300,\n        storage: config.cache?.storage || 'memory',\n      },\n      limits: {\n        maxTokensPerRequest: config.limits?.maxTokensPerRequest || 2000,\n        monthlyBudget: config.limits?.monthlyBudget || 0,\n      },\n    };\n  }\n\n  /**\n   * Get personalized context for a user\n   * This is the main method developers will use\n   */\n  async getContext(options: GetContextOptions): Promise<Context> {\n    // Validate input options\n    if (!options) {\n      throw this.createError(\n        'GetContextOptions is required. Please provide an object with at least a userId field.',\n        'INVALID_OPTIONS',\n        400,\n      );\n    }\n\n    const { userId, task, maxTokens, privacyLevel } = options;\n\n    // Validate userId is provided and is a string\n    if (!userId || typeof userId !== 'string') {\n      throw this.createError(\n        'Valid userId is required. Please provide a non-empty string userId.',\n        'INVALID_USER_ID',\n        400,\n      );\n    }\n\n    // Validate maxTokens if provided\n    if (maxTokens !== undefined && (typeof maxTokens !== 'number' || maxTokens <= 0)) {\n      throw this.createError(\n        'maxTokens must be a positive number if provided.',\n        'INVALID_MAX_TOKENS',\n        400,\n      );\n    }\n\n    // Validate privacyLevel if provided\n    if (privacyLevel && !['strict', 'moderate', 'none'].includes(privacyLevel)) {\n      throw this.createError(\n        'privacyLevel must be one of: strict, moderate, none',\n        'INVALID_PRIVACY_LEVEL',\n        400,\n      );\n    }\n\n    // Create tRPC client with API key\n    const authenticatedTrpc = createTRPCClient(this.config.apiUrl, this.config.apiKey);\n\n    try {\n      // Call backend context endpoint with userId\n      const response = await (authenticatedTrpc as any).data.context.query({\n        userId, // Pass userId as part of the query\n        task: task || 'general',\n        maxFacts: maxTokens ? Math.min(maxTokens / 10, 100) : undefined, // Rough conversion from tokens to facts\n        cachePolicy: 'fresh', // Changed from 'cached' to always get fresh context\n        includeRecentData: true,\n        privacyLevel: privacyLevel || 'none',\n      });\n\n      // Transform response to match SDK Context interface\n      // The API returns more data than the SDK exposes, so we simplify it\n      return {\n        systemPrompt: response.systemPrompt,\n        metadata: {\n          userId: options.userId,\n          timestamp: response.metadata?.generatedAt || new Date(),\n          providers: ['gmail'], // TODO: Track actual providers used\n        },\n        // Token count would need to be calculated from systemPrompt length\n        tokenCount: response.systemPrompt.length / 4, // Rough estimate: 1 token ≈ 4 chars\n      };\n    } catch (error) {\n      // Provide more specific error messages based on the error type\n      const message = error instanceof Error ? error.message : 'Failed to get context';\n\n      // Check for common tRPC/API errors\n      if (message.includes('Invalid input') || message.includes('expected object')) {\n        throw this.createError(\n          'Invalid request format. This may be a SDK version mismatch with the API.',\n          'INVALID_REQUEST_FORMAT',\n          400,\n        );\n      }\n\n      if (message.includes('OAuth access') || message.includes('No OAuth')) {\n        throw this.createError(\n          'User has not authorized access. Please ensure the user has connected their account.',\n          'UNAUTHORIZED_USER',\n          403,\n        );\n      }\n\n      // Generic error fallback\n      throw this.createError(message, 'CONTEXT_FAILED', 500);\n    }\n  }\n\n  /**\n   * Disconnect user and delete their data\n   * This calls the GDPR deleteData endpoint\n   */\n  async disconnect(userId: string): Promise<void> {\n    // Validate userId is provided and is a string\n    if (!userId || typeof userId !== 'string') {\n      throw this.createError(\n        'Valid userId is required for disconnect. Please provide a non-empty string userId.',\n        'INVALID_USER_ID',\n        400,\n      );\n    }\n\n    try {\n      // Create tRPC client with API key\n      const authenticatedTrpc = createTRPCClient(this.config.apiUrl, this.config.apiKey);\n\n      // Call GDPR endpoint with userId\n      await (authenticatedTrpc as any).gdpr.deleteData.mutate({ userId });\n    } catch (error) {\n      // Provide more specific error messages based on the error type\n      const message = error instanceof Error ? error.message : 'Failed to disconnect';\n\n      // Check for specific API errors\n      if (message.includes('not found') || message.includes('does not exist')) {\n        throw this.createError(\n          'User not found. The user may have already been disconnected.',\n          'USER_NOT_FOUND',\n          404,\n        );\n      }\n\n      // Generic error fallback\n      throw this.createError(message, 'DISCONNECT_FAILED', 500);\n    }\n  }\n\n  /**\n   * Create a PersonaError\n   */\n  private createError(message: string, code: string, statusCode?: number): PersonaError {\n    const error = new Error(message) as PersonaError;\n    error.name = 'PersonaError';\n    error.code = code;\n    error.statusCode = statusCode;\n    return error;\n  }\n}\n","'use client';\n\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport type { ReactNode } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { createTRPCReact } from '@trpc/react-query';\nimport { httpBatchLink } from '@trpc/client';\nimport superjson from 'superjson';\nimport { Persona } from '../client/index';\nimport type { AppRouter } from '../types/api-types';\n\n// Create tRPC React instance (types narrowed to any to simplify public d.ts)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst trpc = createTRPCReact<AppRouter>() as any;\n\ninterface KontextContextValue {\n  apiKey?: string;\n  isConnected: boolean;\n  userId: string | null;\n  isLoading: boolean;\n  error: string | null;\n  connectGmail: () => void;\n  disconnect: () => void;\n  // Profile caching\n  systemPrompt: string | null;\n  profileLastUpdated: Date | null;\n  isProfileStale: boolean;\n  isRefreshingProfile: boolean;\n  refreshProfile: () => Promise<void>;\n  // tRPC access (for advanced users)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trpc: any;\n}\n\nconst KontextContext = createContext<KontextContextValue | undefined>(undefined);\n\nexport interface KontextProviderProps {\n  apiKey?: string;\n  apiUrl?: string;\n  children: ReactNode;\n}\n\n// Profile cache TTL: 24 hours\nconst PROFILE_TTL = 24 * 60 * 60 * 1000;\n\n/**\n * Internal component that provides the actual Persona context\n */\nfunction KontextContextProvider({ apiKey, apiUrl, children }: KontextProviderProps) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Profile cache state\n  const [systemPrompt, setSystemPrompt] = useState<string | null>(null);\n  const [profileLastUpdated, setProfileLastUpdated] = useState<Date | null>(null);\n  const [isRefreshingProfile, setIsRefreshingProfile] = useState(false);\n\n  // Create a single Persona instance\n  const persona = React.useMemo(() => {\n    if (!apiKey) return null;\n    return new Persona({\n      apiKey,\n      apiUrl: apiUrl || 'https://api.kontext.dev',\n    });\n  }, [apiKey, apiUrl]);\n\n  // Calculate if profile is stale\n  const isProfileStale = profileLastUpdated\n    ? Date.now() - profileLastUpdated.getTime() > PROFILE_TTL\n    : true;\n\n  // Fetch profile data\n  const fetchProfile = useCallback(async () => {\n    if (!userId || !apiKey) return;\n\n    setIsRefreshingProfile(true);\n    setError(null);\n\n    try {\n      if (!persona) {\n        throw new Error('Persona client not initialized');\n      }\n\n      const context = await persona.getContext({\n        userId,\n        task: 'chat',\n        maxTokens: 500,\n      });\n\n      setSystemPrompt(context.systemPrompt);\n      setProfileLastUpdated(new Date());\n    } catch (err) {\n      console.debug('[Kontext SDK] Failed to fetch profile:', err);\n      // Don't propagate profile fetch errors - they're not critical\n      // Just log them for debugging\n    } finally {\n      setIsRefreshingProfile(false);\n    }\n  }, [userId, apiUrl, apiKey, persona]);\n\n  // Check connection status by attempting to fetch Gmail data\n  const checkConnection = useCallback(async () => {\n    if (!apiKey) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Get userId from URL params (OAuth callback) or local storage\n      const urlParams = new URLSearchParams(window.location.search);\n      const userIdFromUrl = urlParams.get('user_id');\n\n      if (userIdFromUrl) {\n        setUserId(userIdFromUrl);\n        setIsConnected(true);\n        // Clear URL params\n        window.history.replaceState({}, document.title, window.location.pathname);\n        // Store in localStorage for persistence\n        // TODO: Consider implementing client-side encryption for sensitive data\n        // or use sessionStorage for temporary session data\n        localStorage.setItem('persona_user_id', userIdFromUrl);\n        // Don't fetch profile here - let it happen after state updates\n      } else {\n        // Check localStorage for existing connection\n        // TODO: Consider implementing client-side encryption for sensitive data\n        const storedUserId = localStorage.getItem('persona_user_id');\n        if (storedUserId) {\n          setUserId(storedUserId);\n          setIsConnected(true);\n          // Profile will be fetched by the useEffect\n        }\n      }\n    } catch (err) {\n      console.debug('[Kontext SDK] Failed to check connection:', err);\n      // Don't propagate initialization errors - they're not critical\n    } finally {\n      setIsLoading(false);\n    }\n  }, [apiKey, fetchProfile]);\n\n  // Check connection on mount only\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  // Fetch profile when userId changes and is connected\n  useEffect(() => {\n    if (userId && isConnected && !systemPrompt) {\n      fetchProfile();\n    }\n  }, [userId, isConnected, systemPrompt, fetchProfile]);\n\n  const connectGmail = async () => {\n    if (!apiUrl || !apiKey) {\n      const errorMsg = 'API URL and API key required for Gmail connection';\n      setError(errorMsg);\n      throw new Error(errorMsg);\n    }\n\n    try {\n      // Validate and sanitize redirect URI to prevent open redirect attacks\n      const currentUrl = new URL(window.location.href);\n      // Only use origin + pathname, strip query params and fragments for security\n      const redirectUri = `${currentUrl.origin}${currentUrl.pathname}`;\n\n      // Additional validation: ensure redirect URI is from the same origin\n      if (!redirectUri.startsWith(window.location.origin)) {\n        throw new Error('Invalid redirect URI - must be from the same origin');\n      }\n\n      const response = await fetch(\n        `${apiUrl}/oauth/gmail?redirect_uri=${encodeURIComponent(redirectUri)}`,\n        {\n          method: 'GET',\n          headers: {\n            'x-api-key': apiKey, // API key in header, not URL\n          },\n          // Remove redirect: 'manual' - let the server send back the URL\n        },\n      ).catch((fetchErr) => {\n        // Handle network errors gracefully\n        console.debug('[Kontext SDK] Network error during OAuth:', fetchErr);\n        throw new Error('Network error. Please check your connection and try again.');\n      });\n\n      if (response.ok) {\n        const data = await response.json().catch(() => null);\n        if (data?.authUrl) {\n          window.location.href = data.authUrl;\n        } else {\n          throw new Error('No authorization URL received from server');\n        }\n      } else {\n        const errorData = await response\n          .json()\n          .catch(() => ({ error: { message: 'Failed to initiate OAuth' } }));\n        throw new Error(errorData.error?.message || 'Failed to initiate OAuth');\n      }\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Failed to initiate Gmail connection';\n      console.debug('[Kontext SDK] Failed to initiate Gmail connection:', err);\n      setError(errorMessage);\n      // Re-throw to let the modal handle the error display\n      throw err;\n    }\n  };\n\n  const disconnect = async () => {\n    if (!userId || !persona) {\n      const errorMsg = 'Must be connected to disconnect';\n      setError(errorMsg);\n      throw new Error(errorMsg);\n    }\n\n    try {\n      // Use the SDK's disconnect method\n      await persona.disconnect(userId);\n    } catch (err) {\n      console.debug('[Kontext SDK] Failed to disconnect:', err);\n      // Don't set error state for disconnect failures\n      // We'll still clear local state below\n    } finally {\n      // Always clear local state and storage, even if API call fails\n      // This ensures the UI properly updates to disconnected state\n      setUserId(null);\n      setIsConnected(false);\n      setSystemPrompt(null);\n      setProfileLastUpdated(null);\n      setError(null); // Clear any previous errors\n      localStorage.removeItem('persona_user_id');\n    }\n  };\n\n  // Manual profile refresh\n  const refreshProfile = useCallback(async () => {\n    if (!isConnected || !userId) {\n      throw new Error('User must be connected to refresh profile');\n    }\n    await fetchProfile();\n  }, [isConnected, userId, fetchProfile]);\n\n  const value: KontextContextValue = {\n    apiKey,\n    isConnected,\n    userId,\n    isLoading,\n    error,\n    connectGmail,\n    disconnect,\n    // Profile cache\n    systemPrompt,\n    profileLastUpdated,\n    isProfileStale,\n    isRefreshingProfile,\n    refreshProfile,\n    // tRPC access\n    trpc,\n  };\n\n  return <KontextContext.Provider value={value}>{children}</KontextContext.Provider>;\n}\n\n/**\n * KontextProvider component that wraps your app\n * Automatically includes tRPC and QueryClient setup internally\n * Similar to PrivyProvider but for Persona\n */\nexport function KontextProvider({\n  apiKey,\n  apiUrl = 'https://api.kontext.dev',\n  children,\n}: KontextProviderProps) {\n  // Create stable instances\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            staleTime: 10 * 60 * 1000, // 10 minutes for most data\n            gcTime: 30 * 60 * 1000, // 30 minutes in cache (was cacheTime in older versions)\n            retry: (failureCount, error: unknown) => {\n              // Don't retry on 4xx client errors\n              const err = error as { status?: number };\n              if (err?.status && err.status >= 400 && err.status < 500) return false;\n              // Retry up to 3 times with exponential backoff\n              return failureCount < 3;\n            },\n            refetchOnWindowFocus: false, // Avoid unnecessary refetches\n            refetchOnReconnect: true, // Refetch when network reconnects\n          },\n          mutations: {\n            retry: 1, // Only retry mutations once\n          },\n        },\n      }),\n  );\n\n  const [trpcClient] = useState(() => {\n    if (!apiKey) return null;\n\n    // Create tRPC client with API key authentication\n    return trpc.createClient({\n      transformer: superjson,\n      links: [\n        httpBatchLink({\n          url: `${apiUrl}/trpc`,\n          maxItems: 10, // Maximum number of operations in a single batch\n          maxURLLength: 2083, // Prevent URLs from becoming too long\n          async headers() {\n            // Pass API key in x-api-key header (more semantic for API keys)\n            return {\n              'x-api-key': apiKey,\n            };\n          },\n          fetch(url, options) {\n            return fetch(url, {\n              ...options,\n              // Add connection pooling for better performance\n              keepalive: true,\n            });\n          },\n        }),\n      ],\n    });\n  });\n\n  // Always wrap with tRPC and QueryClient providers when apiKey is available\n  if (trpcClient) {\n    return (\n      <trpc.Provider client={trpcClient} queryClient={queryClient}>\n        <QueryClientProvider client={queryClient}>\n          <KontextContextProvider apiKey={apiKey} apiUrl={apiUrl}>\n            {children}\n          </KontextContextProvider>\n        </QueryClientProvider>\n      </trpc.Provider>\n    );\n  }\n\n  // If no apiKey, just provide the basic KontextContext with QueryClient\n  return (\n    <QueryClientProvider client={queryClient}>\n      <KontextContextProvider apiKey={apiKey} apiUrl={apiUrl}>\n        {children}\n      </KontextContextProvider>\n    </QueryClientProvider>\n  );\n}\n\n/**\n * Hook to access Persona context\n * Must be used within KontextProvider\n */\nexport function useKontext() {\n  const context = useContext(KontextContext);\n  if (!context) {\n    throw new Error('useKontext must be used within KontextProvider');\n  }\n  return context;\n}\n\n/**\n * Hook to access just the profile data\n * Convenience hook for getting cached profile information\n */\nexport function useKontextProfile() {\n  const context = useKontext();\n  return {\n    systemPrompt: context.systemPrompt,\n    lastUpdated: context.profileLastUpdated,\n    isStale: context.isProfileStale,\n    isRefreshing: context.isRefreshingProfile,\n    refresh: context.refreshProfile,\n  };\n}\n","'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useKontext } from './context';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { createTRPCClient, createWSClient, splitLink, wsLink, httpBatchLink } from '@trpc/client';\nimport superjson from 'superjson';\nimport type { AppRouter } from '../types/api-types';\n\nexport interface RealtimeContextOptions {\n  enabled?: boolean;\n  onUpdate?: (event: any) => void;\n}\n\nexport interface RealtimeContextState {\n  isConnected: boolean;\n  lastUpdate: Date | null;\n  updateCount: number;\n  recentUpdates: Array<{\n    type: string;\n    timestamp: Date;\n    metadata?: any;\n  }>;\n}\n\n/**\n * Hook for real-time context updates via WebSocket subscriptions\n */\nexport function useRealtimeContext(options: RealtimeContextOptions = {}) {\n  const { userId, apiKey } = useKontext();\n  const queryClient = useQueryClient();\n  const [state, setState] = useState<RealtimeContextState>({\n    isConnected: false,\n    lastUpdate: null,\n    updateCount: 0,\n    recentUpdates: [],\n  });\n\n  const { enabled = true, onUpdate } = options;\n\n  // Use ref to store the callback to avoid dependency issues\n  const onUpdateRef = useRef(onUpdate);\n  onUpdateRef.current = onUpdate;\n\n  // Store cleanup flag to prevent state updates after unmount\n  const isMountedRef = useRef(true);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    if (!enabled || !userId || !apiKey) {\n      return;\n    }\n\n    let isCleanedUp = false;\n\n    // Parse API URL to get WebSocket URL\n    const apiUrl = process.env.NEXT_PUBLIC_KONTEXT_API_URL || 'https://api.kontext.dev';\n    const wsUrl = apiUrl.replace('https://', 'wss://').replace('http://', 'ws://');\n\n    // Create WebSocket client\n    const wsClient = createWSClient({\n      url: `${wsUrl}/trpc`,\n      connectionParams: async () => ({\n        'x-api-key': apiKey,\n      }),\n    });\n\n    // Create tRPC client with WebSocket support\n    const trpcClient = createTRPCClient<AppRouter>({\n      links: [\n        splitLink({\n          condition: (op) => op.type === 'subscription',\n          true: wsLink({\n            client: wsClient,\n            transformer: superjson,\n          }),\n          false: httpBatchLink({\n            url: `${apiUrl}/trpc`,\n            headers: {\n              'x-api-key': apiKey,\n            },\n            transformer: superjson,\n          }),\n        }),\n      ],\n    });\n\n    // Subscribe to context updates\n    let subscription: any;\n    try {\n      subscription = (trpcClient as any).data.contextUpdates.subscribe(\n        { userId },\n        {\n          onData: (event: any) => {\n            if (isCleanedUp || !isMountedRef.current) return;\n\n            console.log('Received context update:', event);\n\n            // Update state - ensure timestamp is properly handled\n            setState((prev) => ({\n              isConnected: true,\n              lastUpdate: new Date(),\n              updateCount: prev.updateCount + 1,\n              recentUpdates: [\n                {\n                  type: event.type || 'unknown',\n                  timestamp: event.timestamp ? new Date(event.timestamp) : new Date(),\n                  metadata: event.metadata || {},\n                },\n                ...prev.recentUpdates.slice(0, 9), // Keep last 10 updates\n              ],\n            }));\n\n            // Invalidate context queries to trigger refetch\n            queryClient.invalidateQueries({ queryKey: ['context', userId] });\n\n            // Call user callback if provided\n            if (onUpdateRef.current) {\n              onUpdateRef.current(event);\n            }\n          },\n          onError: (error: any) => {\n            if (isCleanedUp || !isMountedRef.current) return;\n\n            console.error('Subscription error:', error);\n            setState((prev) => ({\n              ...prev,\n              isConnected: false,\n            }));\n          },\n        },\n      );\n    } catch (error) {\n      console.error('Failed to create subscription:', error);\n      return;\n    }\n\n    // Mark as connected\n    if (!isCleanedUp && isMountedRef.current) {\n      setState((prev) => ({\n        ...prev,\n        isConnected: true,\n      }));\n    }\n\n    // Cleanup\n    return () => {\n      isCleanedUp = true;\n      isMountedRef.current = false;\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n      wsClient.close();\n      // Don't update state in cleanup to avoid issues\n    };\n  }, [enabled, userId, apiKey, queryClient]);\n\n  return state;\n}\n\n/**\n * Hook for automatic polling fallback when WebSocket is not available\n */\nexport function usePollingContext(intervalMs: number = 30000) {\n  const { userId, isConnected } = useKontext();\n  const queryClient = useQueryClient();\n  const [isPolling, setIsPolling] = useState(false);\n\n  useEffect(() => {\n    if (!isConnected || !userId) {\n      return;\n    }\n\n    setIsPolling(true);\n    const interval = setInterval(() => {\n      // Invalidate context to trigger refetch\n      queryClient.invalidateQueries({ queryKey: ['context', userId] });\n    }, intervalMs);\n\n    return () => {\n      setIsPolling(false);\n      clearInterval(interval);\n    };\n  }, [isConnected, userId, intervalMs, queryClient]);\n\n  return { isPolling };\n}\n","import { useState, useEffect, useRef } from 'react';\n\nexport type Theme = 'light' | 'dark';\n\nexport interface UseThemeDetectionOptions {\n  initialTheme?: Theme;\n  onThemeChange?: (theme: Theme) => void;\n}\n\n/**\n * Hook for detecting and tracking theme changes\n * Each instance maintains its own observers to prevent conflicts\n */\nexport function useThemeDetection(options: UseThemeDetectionOptions = {}): Theme {\n  const { initialTheme = 'light', onThemeChange } = options;\n  const [theme, setTheme] = useState<Theme>(initialTheme);\n\n  // Refs for cleanup tracking\n  const observerRef = useRef<MutationObserver | null>(null);\n  const mediaQueryRef = useRef<MediaQueryList | null>(null);\n  const detectThemeRef = useRef<(() => void) | null>(null);\n  const onThemeChangeRef = useRef(onThemeChange);\n  onThemeChangeRef.current = onThemeChange;\n\n  useEffect(() => {\n    const detectTheme = () => {\n      const isDark =\n        document.documentElement.classList.contains('dark') ||\n        document.body.classList.contains('dark') ||\n        (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n\n      const newTheme = isDark ? 'dark' : 'light';\n      setTheme(newTheme);\n      onThemeChangeRef.current?.(newTheme);\n    };\n\n    // Store ref for cleanup\n    detectThemeRef.current = detectTheme;\n\n    // Initial theme detection\n    detectTheme();\n\n    // Set up DOM observer for class changes\n    const observer = new MutationObserver(detectTheme);\n    observerRef.current = observer;\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n\n    // Set up media query listener for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    mediaQueryRef.current = mediaQuery;\n    mediaQuery.addEventListener('change', detectTheme);\n\n    // Cleanup function\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n        observerRef.current = null;\n      }\n      if (mediaQueryRef.current && detectThemeRef.current) {\n        mediaQueryRef.current.removeEventListener('change', detectThemeRef.current);\n        mediaQueryRef.current = null;\n      }\n      detectThemeRef.current = null;\n    };\n  }, []); // Empty dependency array - we want this to run once per hook instance\n\n  return theme;\n}\n","// Design tokens matching developer-dashboard design system\n// Self-contained - no external dependencies required\n\nexport const designTokens = {\n  light: {\n    // Core colors\n    background: '#ffffff',\n    foreground: '#0a0a0a',\n    card: '#ffffff',\n    cardForeground: '#0a0a0a',\n    popover: '#ffffff',\n    popoverForeground: '#0a0a0a',\n    primary: '#0066cc',\n    primaryForeground: '#ffffff',\n    secondary: '#fafafa',\n    secondaryForeground: '#0a0a0a',\n    muted: '#f5f5f5',\n    mutedForeground: '#666666',\n    accent: '#f5f5f5',\n    accentForeground: '#0a0a0a',\n    destructive: '#dc2626',\n    destructiveForeground: '#ffffff',\n    border: '#f0f0f0',\n    input: '#f0f0f0',\n    ring: '#0066cc',\n    // Success color for connected state\n    success: '#22c55e',\n    successForeground: '#ffffff',\n    warning: '#f59e0b',\n    // Brand colors for outline\n    zinc: '#71717a',\n    forestGreen: '#16a34a',\n  },\n  dark: {\n    // Core colors\n    background: '#0a0a0a',\n    foreground: '#f5f5f5',\n    card: '#0a0a0a',\n    cardForeground: '#f5f5f5',\n    popover: '#0a0a0a',\n    popoverForeground: '#f5f5f5',\n    primary: '#4d94ff',\n    primaryForeground: '#0a0a0a',\n    secondary: '#1a1a1a',\n    secondaryForeground: '#f5f5f5',\n    muted: '#1a1a1a',\n    mutedForeground: '#999999',\n    accent: '#1a1a1a',\n    accentForeground: '#f5f5f5',\n    destructive: '#ef4444',\n    destructiveForeground: '#f5f5f5',\n    border: '#262626',\n    input: '#262626',\n    ring: '#4d94ff',\n    // Success color for connected state\n    success: '#22c55e',\n    successForeground: '#0a0a0a',\n    warning: '#f59e0b',\n    // Brand colors for outline\n    zinc: '#a1a1aa',\n    forestGreen: '#22c55e',\n  },\n} as const;\n\n// Typography\nexport const typography = {\n  fontSans:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif\",\n  fontMono:\n    \"ui-monospace, 'SF Mono', Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono', monospace\",\n  fontSize: {\n    xs: '0.75rem', // 12px\n    sm: '0.875rem', // 14px\n    base: '1rem', // 16px\n    lg: '1.125rem', // 18px\n    xl: '1.25rem', // 20px\n  },\n  fontWeight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n  },\n  lineHeight: {\n    tight: '1.25',\n    normal: '1.5',\n    relaxed: '1.75',\n  },\n};\n\n// Spacing\nexport const spacing = {\n  0: '0',\n  1: '0.25rem', // 4px\n  2: '0.5rem', // 8px\n  3: '0.75rem', // 12px\n  4: '1rem', // 16px\n  5: '1.25rem', // 20px\n  6: '1.5rem', // 24px\n  8: '2rem', // 32px\n};\n\n// Border radius\nexport const borderRadius = {\n  none: '0',\n  sm: '0.125rem', // 2px\n  base: '0.375rem', // 6px (matches --radius)\n  md: '0.5rem', // 8px\n  lg: '0.75rem', // 12px\n  xl: '1rem', // 16px\n  squircle: '1.25rem', // 20px - for squircle shape\n  full: '9999px',\n};\n\n// Transitions\nexport const transitions = {\n  fast: 'all 150ms ease',\n  base: 'all 200ms ease',\n  slow: 'all 300ms ease',\n};\n\n// Elevation shadows\nexport const elevation = {\n  low: '0 2px 8px rgba(0, 0, 0, 0.08), 0 1px 2px rgba(0, 0, 0, 0.04)',\n  medium: '0 4px 16px rgba(0, 0, 0, 0.12), 0 2px 4px rgba(0, 0, 0, 0.06)',\n  high: '0 8px 32px rgba(0, 0, 0, 0.16), 0 4px 8px rgba(0, 0, 0, 0.08)',\n  // Dark mode shadows (lighter shadows for dark backgrounds)\n  lowDark: '0 2px 8px rgba(0, 0, 0, 0.32), 0 1px 2px rgba(0, 0, 0, 0.24)',\n  mediumDark: '0 4px 16px rgba(0, 0, 0, 0.48), 0 2px 4px rgba(0, 0, 0, 0.32)',\n  highDark: '0 8px 32px rgba(0, 0, 0, 0.64), 0 4px 8px rgba(0, 0, 0, 0.48)',\n};\n\n// Helper to detect dark mode\nexport const getTheme = (): 'light' | 'dark' => {\n  if (typeof window === 'undefined') return 'light';\n\n  // Check for .dark class on html or body\n  const isDark =\n    document.documentElement.classList.contains('dark') || document.body.classList.contains('dark');\n\n  // Fallback to media query\n  if (!isDark && window.matchMedia) {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }\n\n  return isDark ? 'dark' : 'light';\n};\n\n// Get current theme tokens\nexport const getTokens = () => {\n  const theme = getTheme();\n  return designTokens[theme];\n};\n\n// Button variant styles\ntype TokenType = typeof designTokens.light | typeof designTokens.dark;\nexport const buttonVariants = {\n  default: (tokens: TokenType) => ({\n    backgroundColor: tokens.primary,\n    color: tokens.primaryForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.primary,\n      opacity: 0.9,\n    },\n  }),\n  secondary: (tokens: TokenType) => ({\n    backgroundColor: tokens.secondary,\n    color: tokens.secondaryForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.secondary,\n      opacity: 0.8,\n    },\n  }),\n  outline: (tokens: TokenType) => ({\n    backgroundColor: tokens.background,\n    color: tokens.foreground,\n    border: `1px solid ${tokens.border}`,\n    '&:hover': {\n      backgroundColor: tokens.accent,\n    },\n  }),\n  ghost: (tokens: TokenType) => ({\n    backgroundColor: 'transparent',\n    color: tokens.foreground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.accent,\n    },\n  }),\n  destructive: (tokens: TokenType) => ({\n    backgroundColor: tokens.destructive,\n    color: tokens.destructiveForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.destructive,\n      opacity: 0.9,\n    },\n  }),\n  success: (tokens: TokenType) => ({\n    backgroundColor: tokens.success,\n    color: tokens.successForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.success,\n      opacity: 0.9,\n    },\n  }),\n};\n\n// Button size styles\nexport const buttonSizes = {\n  sm: {\n    height: '2rem', // 32px (h-8)\n    padding: '0 0.75rem', // px-3\n    fontSize: typography.fontSize.sm,\n    gap: '0.375rem', // gap-1.5\n  },\n  default: {\n    height: '2.25rem', // 36px (h-9)\n    padding: '0 1rem', // px-4\n    fontSize: typography.fontSize.sm,\n    gap: '0.5rem', // gap-2\n  },\n  lg: {\n    height: '2.5rem', // 40px (h-10)\n    padding: '0 1.5rem', // px-6\n    fontSize: typography.fontSize.base,\n    gap: '0.5rem', // gap-2\n  },\n};\n\n// Base button styles\nexport const baseButtonStyles = {\n  fontFamily: typography.fontSans,\n  fontWeight: typography.fontWeight.medium,\n  borderRadius: borderRadius.base,\n  transition: transitions.fast,\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  whiteSpace: 'nowrap' as const,\n  outline: 'none',\n  position: 'relative' as const,\n  '&:disabled': {\n    opacity: 0.5,\n    cursor: 'not-allowed',\n  },\n  '&:focus-visible': {\n    outline: `3px solid`,\n    outlineOffset: '2px',\n  },\n};\n\n// Card/Modal styles matching dashboard\nexport const cardStyles = (tokens: TokenType) => ({\n  backgroundColor: tokens.card,\n  color: tokens.cardForeground,\n  border: `1px solid ${tokens.border}`,\n  borderRadius: borderRadius.lg,\n  padding: spacing[6],\n  // No shadow - flat design\n  boxShadow: 'none',\n});\n\n// Helper to apply hover styles (since we can't use :hover in inline styles easily)\nexport const createInteractiveStyles = (\n  baseStyle: React.CSSProperties,\n  hoverStyle?: React.CSSProperties,\n  activeStyle?: React.CSSProperties,\n) => {\n  return {\n    base: baseStyle,\n    hover: hoverStyle || baseStyle,\n    active: activeStyle || hoverStyle || baseStyle,\n  };\n};\n","'use client';\n\nimport React, { useState } from 'react';\nimport { useKontext } from '../react/context';\nimport { useThemeDetection } from '../hooks/useThemeDetection';\nimport {\n  designTokens,\n  typography,\n  borderRadius,\n  transitions,\n  buttonSizes,\n  spacing,\n  elevation,\n} from './styles';\n\nexport interface KontextConnectButtonProps {\n  className?: string;\n  children?: React.ReactNode;\n  variant?: 'default' | 'secondary' | 'outline' | 'ghost' | 'success';\n  size?: 'sm' | 'default' | 'lg';\n  fullWidth?: boolean;\n  onError?: (error: string) => void;\n}\n\n/**\n * Button component to connect Gmail with built-in styling\n * Matches the developer-dashboard design system\n */\nexport function KontextConnectButton({\n  className = '',\n  children = 'Connect Gmail',\n  variant = 'default',\n  size = 'default',\n  fullWidth = false,\n  onError,\n}: KontextConnectButtonProps) {\n  const { connectGmail, isConnected, isLoading } = useKontext();\n  const theme = useThemeDetection();\n  const [isHovered, setIsHovered] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showError, setShowError] = useState(false);\n\n  const tokens = designTokens[theme];\n\n  if (isConnected) {\n    return null;\n  }\n\n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n    setShowError(false);\n\n    try {\n      await connectGmail();\n    } catch (err) {\n      // Silently catch any errors from connectGmail\n      console.debug('[KontextConnectButton] Connection error caught:', err);\n      const errorMessage = 'Unable to connect. Please try again.';\n      setError(errorMessage);\n      setShowError(true);\n\n      // Notify parent component if handler provided\n      if (onError) {\n        onError(errorMessage);\n      }\n\n      // Auto-hide error after 5 seconds\n      setTimeout(() => setShowError(false), 5000);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Get variant styles\n  const getVariantStyles = () => {\n    const baseStyles: Record<string, React.CSSProperties> = {\n      default: {\n        backgroundColor: tokens.primary,\n        color: tokens.primaryForeground,\n        border: 'none',\n      },\n      secondary: {\n        backgroundColor: tokens.secondary,\n        color: tokens.secondaryForeground,\n        border: 'none',\n      },\n      outline: {\n        backgroundColor: 'transparent',\n        color: tokens.foreground,\n        border: `1px solid ${tokens.border}`,\n      },\n      ghost: {\n        backgroundColor: 'transparent',\n        color: tokens.foreground,\n        border: 'none',\n      },\n      success: {\n        backgroundColor: tokens.success,\n        color: tokens.successForeground,\n        border: 'none',\n      },\n    };\n\n    const hoverStyles: Record<string, React.CSSProperties> = {\n      default: {\n        backgroundColor: tokens.primary,\n        opacity: 0.9,\n      },\n      secondary: {\n        backgroundColor: tokens.secondary,\n        opacity: 0.8,\n      },\n      outline: {\n        backgroundColor: tokens.accent,\n      },\n      ghost: {\n        backgroundColor: tokens.accent,\n      },\n      success: {\n        backgroundColor: tokens.success,\n        opacity: 0.9,\n      },\n    };\n\n    return {\n      base: baseStyles[variant],\n      hover: hoverStyles[variant],\n    };\n  };\n\n  const variantStyles = getVariantStyles();\n  const sizeStyles = buttonSizes[size];\n\n  const buttonStyles: React.CSSProperties = {\n    // Base styles\n    fontFamily: typography.fontSans,\n    fontWeight: typography.fontWeight.medium,\n    borderRadius: borderRadius.lg, // Squircle shape for button\n    transition: transitions.fast,\n    cursor: isConnecting || isLoading ? 'not-allowed' : 'pointer',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    whiteSpace: 'nowrap',\n    outline: 'none',\n    position: 'relative',\n    width: fullWidth ? '100%' : 'auto',\n\n    // Size styles\n    ...sizeStyles,\n\n    // Variant styles (but remove the border since we'll use box-shadow)\n    ...variantStyles.base,\n    border: 'none',\n\n    // Combine tri-color outline with elevation shadow\n    boxShadow: `\n      0 0 0 1px ${tokens.forestGreen},\n      0 0 0 2px ${tokens.zinc},\n      ${theme === 'dark' ? elevation.lowDark : elevation.low}\n    `,\n\n    // Hover state (applied conditionally)\n    ...(isHovered && !isConnecting && !isLoading ? variantStyles.hover : {}),\n\n    // Disabled state\n    opacity:\n      isConnecting || isLoading\n        ? 0.5\n        : isHovered && 'opacity' in variantStyles.hover\n          ? variantStyles.hover.opacity\n          : 1,\n  };\n\n  // Loading spinner component - matches modal animation\n  const LoadingSpinner = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      style={{\n        animation: 'spin 1s linear infinite',\n      }}\n    >\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n        fill=\"none\"\n        strokeDasharray=\"32\"\n        strokeDashoffset=\"32\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          dur=\"2s\"\n          values=\"0 32;16 16;0 32;0 32\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          values=\"0;-16;-32;-32\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n\n  // Error tooltip styles\n  const errorTooltipStyles: React.CSSProperties = {\n    position: 'absolute',\n    bottom: '100%',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    marginBottom: spacing[2],\n    backgroundColor: tokens.destructive,\n    color: tokens.destructiveForeground,\n    padding: `${spacing[1]} ${spacing[2]}`,\n    borderRadius: borderRadius.base,\n    fontSize: typography.fontSize.xs,\n    fontFamily: typography.fontSans,\n    whiteSpace: 'nowrap',\n    opacity: showError ? 1 : 0,\n    pointerEvents: 'none',\n    transition: transitions.fast,\n    zIndex: 10,\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          position: 'relative',\n          display: 'inline-block',\n          width: fullWidth ? '100%' : 'auto',\n        }}\n      >\n        {showError && error && <div style={errorTooltipStyles}>{error}</div>}\n        <button\n          onClick={handleConnect}\n          disabled={isConnecting || isLoading}\n          className={className}\n          style={buttonStyles}\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n          onFocus={(e) => {\n            // Add focus ring with increased offset to not overlap tri-color outline, keep elevation\n            e.currentTarget.style.boxShadow = `\n              0 0 0 1px ${tokens.forestGreen},\n              0 0 0 2px ${tokens.zinc},\n              0 0 0 5px ${tokens.ring},\n              ${theme === 'dark' ? elevation.lowDark : elevation.low}\n            `;\n          }}\n          onBlur={(e) => {\n            // Restore original tri-color outline with elevation\n            e.currentTarget.style.boxShadow = `\n              0 0 0 1px ${tokens.forestGreen},\n              0 0 0 2px ${tokens.zinc},\n              ${theme === 'dark' ? elevation.lowDark : elevation.low}\n            `;\n          }}\n        >\n          {isConnecting || isLoading ? (\n            <span style={{ display: 'flex', alignItems: 'center', gap: spacing[2] }}>\n              <LoadingSpinner />\n              Connecting...\n            </span>\n          ) : (\n            children\n          )}\n        </button>\n      </div>\n      <style>{`\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n      `}</style>\n    </>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useKontext } from '../react/context';\nimport { designTokens, typography, borderRadius, transitions, spacing } from './styles';\n\nexport interface KontextStatusProps {\n  className?: string;\n  connectedText?: string;\n  disconnectedText?: string;\n  showDisconnect?: boolean;\n  disconnectClassName?: string;\n  variant?: 'inline' | 'card' | 'badge';\n}\n\n/**\n * Component that shows connection status with consistent styling\n * Matches the developer-dashboard design system\n */\nexport function KontextStatus({\n  className = '',\n  connectedText = 'Personalized responses enabled',\n  disconnectedText = 'Connect Gmail for personalized responses',\n  showDisconnect = false,\n  disconnectClassName = '',\n  variant = 'inline',\n}: KontextStatusProps) {\n  const { isConnected, isLoading, disconnect } = useKontext();\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n  const [isDisconnectHovered, setIsDisconnectHovered] = useState(false);\n\n  // Update theme when component mounts and when theme changes\n  useEffect(() => {\n    const detectTheme = () => {\n      const isDark =\n        document.documentElement.classList.contains('dark') ||\n        document.body.classList.contains('dark') ||\n        (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n      setTheme(isDark ? 'dark' : 'light');\n    };\n\n    detectTheme();\n\n    // Listen for theme changes\n    const observer = new MutationObserver(detectTheme);\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    mediaQuery.addEventListener('change', detectTheme);\n\n    return () => {\n      observer.disconnect();\n      mediaQuery.removeEventListener('change', detectTheme);\n    };\n  }, []);\n\n  const tokens = designTokens[theme];\n\n  // Base container styles based on variant\n  const getContainerStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      fontFamily: typography.fontSans,\n      fontSize: typography.fontSize.sm,\n      display: 'flex',\n      alignItems: 'center',\n      gap: spacing[2],\n    };\n\n    switch (variant) {\n      case 'card':\n        return {\n          ...baseStyles,\n          backgroundColor: tokens.card,\n          color: tokens.cardForeground,\n          border: `1px solid ${tokens.border}`,\n          borderRadius: borderRadius.lg,\n          padding: spacing[4],\n          boxShadow: 'none',\n        };\n      case 'badge':\n        return {\n          ...baseStyles,\n          backgroundColor: isConnected ? tokens.success : tokens.muted,\n          color: isConnected ? tokens.successForeground : tokens.mutedForeground,\n          borderRadius: borderRadius.full,\n          padding: `${spacing[1]} ${spacing[3]}`,\n          fontSize: typography.fontSize.xs,\n          fontWeight: typography.fontWeight.medium,\n          display: 'inline-flex',\n        };\n      case 'inline':\n      default:\n        return {\n          ...baseStyles,\n          color: tokens.foreground,\n        };\n    }\n  };\n\n  const containerStyles = getContainerStyles();\n\n  const loadingStyles: React.CSSProperties = {\n    color: tokens.mutedForeground,\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.sm,\n    display: 'flex',\n    alignItems: 'center',\n    gap: spacing[2],\n  };\n\n  const statusIndicatorStyles: React.CSSProperties = {\n    color: tokens.success,\n    fontWeight: typography.fontWeight.semibold,\n    fontSize: variant === 'badge' ? typography.fontSize.xs : typography.fontSize.sm,\n  };\n\n  const statusTextStyles: React.CSSProperties = {\n    color: isConnected\n      ? variant === 'badge'\n        ? tokens.successForeground\n        : tokens.success\n      : tokens.mutedForeground,\n    fontWeight: variant === 'badge' ? typography.fontWeight.medium : typography.fontWeight.normal,\n  };\n\n  const disconnectButtonStyles: React.CSSProperties = {\n    marginLeft: spacing[2],\n    backgroundColor: isDisconnectHovered ? tokens.accent : 'transparent',\n    color: tokens.destructive,\n    fontWeight: typography.fontWeight.medium,\n    padding: `${spacing[1]} ${spacing[2]}`,\n    borderRadius: borderRadius.base,\n    border: `1px solid ${tokens.destructive}`,\n    cursor: 'pointer',\n    transition: transitions.fast,\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.xs,\n    outline: 'none',\n  };\n\n  // Loading spinner component\n  const LoadingSpinner = () => (\n    <svg\n      width=\"14\"\n      height=\"14\"\n      viewBox=\"0 0 24 24\"\n      style={{\n        animation: 'spin 1s linear infinite',\n        color: tokens.mutedForeground,\n      }}\n    >\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n        fill=\"none\"\n        strokeDasharray=\"32\"\n        strokeDashoffset=\"32\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          dur=\"2s\"\n          values=\"0 32;16 16;0 32;0 32\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          values=\"0;-16;-32;-32\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n\n  if (isLoading) {\n    return (\n      <>\n        <div className={className} style={{ ...containerStyles, ...loadingStyles }}>\n          <LoadingSpinner />\n          <span>Loading...</span>\n        </div>\n        <style>{`\n          @keyframes spin {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(360deg); }\n          }\n        `}</style>\n      </>\n    );\n  }\n\n  if (isConnected) {\n    return (\n      <div className={className} style={containerStyles}>\n        <span style={statusIndicatorStyles}>✓</span>\n        <span style={statusTextStyles}>{connectedText}</span>\n        {showDisconnect && (\n          <button\n            onClick={disconnect}\n            className={disconnectClassName}\n            style={disconnectButtonStyles}\n            onMouseEnter={() => setIsDisconnectHovered(true)}\n            onMouseLeave={() => setIsDisconnectHovered(false)}\n            onFocus={(e) => {\n              e.currentTarget.style.outline = `2px solid ${tokens.ring}`;\n              e.currentTarget.style.outlineOffset = '2px';\n            }}\n            onBlur={(e) => {\n              e.currentTarget.style.outline = 'none';\n            }}\n          >\n            Disconnect\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className} style={containerStyles}>\n      <span style={statusTextStyles}>{disconnectedText}</span>\n    </div>\n  );\n}\n"]}