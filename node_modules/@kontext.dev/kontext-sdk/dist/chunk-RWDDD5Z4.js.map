{"version":3,"sources":["../src/react/context.tsx","../src/hooks/useThemeDetection.ts","../src/components/styles.ts","../src/components/KontextConnectButton.tsx","../src/components/KontextStatus.tsx","../src/hooks/useModalState.ts","../src/components/KontextModal.tsx"],"names":["trpc","createTRPCReact","KontextContext","createContext","PROFILE_TTL","KontextContextProvider","apiKey","apiUrl","children","isConnected","setIsConnected","useState","userId","setUserId","isLoading","setIsLoading","error","setError","systemPrompt","setSystemPrompt","profileLastUpdated","setProfileLastUpdated","isRefreshingProfile","setIsRefreshingProfile","persona","React","Persona","isProfileStale","fetchProfile","useCallback","context","err","checkConnection","userIdFromUrl","storedUserId","useEffect","connectGmail","errorMsg","currentUrl","redirectUri","response","fetchErr","data","errorData","errorMessage","disconnect","refreshProfile","value","jsx","KontextProvider","queryClient","QueryClient","failureCount","trpcClient","superjson","httpBatchLink","url","options","QueryClientProvider","useKontext","useContext","useKontextProfile","useThemeDetection","initialTheme","onThemeChange","theme","setTheme","observerRef","useRef","mediaQueryRef","detectThemeRef","onThemeChangeRef","detectTheme","newTheme","observer","mediaQuery","designTokens","typography","spacing","borderRadius","transitions","elevation","getTheme","isDark","getTokens","buttonVariants","tokens","buttonSizes","baseButtonStyles","cardStyles","createInteractiveStyles","baseStyle","hoverStyle","activeStyle","KontextConnectButton","className","variant","size","fullWidth","onError","isHovered","setIsHovered","isConnecting","setIsConnecting","showError","setShowError","handleConnect","variantStyles","baseStyles","hoverStyles","sizeStyles","buttonStyles","LoadingSpinner","jsxs","errorTooltipStyles","Fragment","e","KontextStatus","connectedText","disconnectedText","showDisconnect","disconnectClassName","isDisconnectHovered","setIsDisconnectHovered","containerStyles","loadingStyles","statusIndicatorStyles","statusTextStyles","disconnectButtonStyles","useModalState","initialOpen","onOpenChange","onConnectingChange","isOpen","setIsOpenInternal","setIsConnectingInternal","onOpenChangeRef","onConnectingChangeRef","setIsOpen","open","connecting","close","toggle","KontextModal","trigger","customId","generatedId","useId","modalId","setConnecting","personaLoading","profile","localError","setLocalError","handleConnectGmail","handleDisconnect","formatRelativeTime","date","seconds","minutes","hours","days","refs","useFloating","isModalOpen","click","useClick","role","useRole","getReferenceProps","useInteractions","modalContentStyles","headingStyles","statusContainerStyles","statusRowStyles","successIndicatorStyles","successTextStyles","profileStatusStyles","profileTimeStyles","refreshButtonStyles","descriptionStyles","connectButtonStyles","spinnerStyles","errorStyles"],"mappings":"ubAaA,IAAMA,CAAAA,CAAOC,eAAAA,GAqBPC,EAAAA,CAAiBC,aAAAA,CAA+C,MAAS,CAAA,CASzEC,EAAAA,CAAc,IAAA,CAAU,GAAK,GAAA,CAKnC,SAASC,EAAAA,CAAuB,CAAE,MAAA,CAAAC,CAAAA,CAAQ,OAAAC,CAAAA,CAAQ,QAAA,CAAAC,CAAS,CAAA,CAAyB,CAClF,GAAM,CAACC,CAAAA,CAAaC,CAAc,CAAA,CAAIC,QAAAA,CAAS,KAAK,CAAA,CAC9C,CAACC,CAAAA,CAAQC,GAAS,CAAA,CAAIF,QAAAA,CAAwB,IAAI,CAAA,CAClD,CAACG,CAAAA,CAAWC,CAAY,CAAA,CAAIJ,QAAAA,CAAS,IAAI,CAAA,CACzC,CAACK,CAAAA,CAAOC,CAAQ,CAAA,CAAIN,QAAAA,CAAwB,IAAI,CAAA,CAGhD,CAACO,CAAAA,CAAcC,CAAe,CAAA,CAAIR,QAAAA,CAAwB,IAAI,CAAA,CAC9D,CAACS,CAAAA,CAAoBC,CAAqB,CAAA,CAAIV,QAAAA,CAAsB,IAAI,CAAA,CACxE,CAACW,CAAAA,CAAqBC,CAAsB,CAAA,CAAIZ,QAAAA,CAAS,KAAK,CAAA,CAG9Da,EAAUC,EAAAA,CAAM,OAAA,CAAQ,IACvBnB,CAAAA,CACE,IAAIoB,CAAAA,CAAQ,CACjB,MAAA,CAAApB,CAAAA,CACA,MAAA,CAAQC,CAAAA,EAAU,yBACpB,CAAC,EAJmB,IAAA,CAKnB,CAACD,CAAAA,CAAQC,CAAM,CAAC,CAAA,CAGboB,EAAiBP,CAAAA,CACnB,IAAA,CAAK,GAAA,EAAI,CAAIA,CAAAA,CAAmB,OAAA,GAAYhB,EAAAA,CAC5C,IAAA,CAGEwB,CAAAA,CAAeC,WAAAA,CAAY,SAAY,CAC3C,GAAI,EAAA,CAACjB,CAAAA,EAAU,CAACN,CAAAA,CAAAA,CAEhB,CAAAiB,CAAAA,CAAuB,IAAI,CAAA,CAC3BN,CAAAA,CAAS,IAAI,CAAA,CAEb,GAAI,CACF,GAAI,CAACO,CAAAA,CACH,MAAM,IAAI,KAAA,CAAM,gCAAgC,EAGlD,IAAMM,CAAAA,CAAU,MAAMN,CAAAA,CAAQ,UAAA,CAAW,CACvC,OAAAZ,CAAAA,CACA,IAAA,CAAM,MAAA,CACN,SAAA,CAAW,GACb,CAAC,EAEDO,CAAAA,CAAgBW,CAAAA,CAAQ,YAAY,CAAA,CACpCT,CAAAA,CAAsB,IAAI,IAAM,EAClC,CAAA,MAASU,CAAAA,CAAK,CACZ,OAAA,CAAQ,KAAA,CAAM,yCAA0CA,CAAG,EAG7D,CAAA,OAAE,CACAR,CAAAA,CAAuB,KAAK,EAC9B,CAAA,CACF,CAAA,CAAG,CAACX,CAAAA,CAAQL,CAAAA,CAAQD,CAAAA,CAAQkB,CAAO,CAAC,CAAA,CAG9BQ,CAAAA,CAAkBH,WAAAA,CAAY,SAAY,CAC9C,GAAI,CAACvB,CAAAA,CAAQ,CACXS,CAAAA,CAAa,KAAK,CAAA,CAClB,MACF,CAEA,GAAI,CAGF,IAAMkB,CAAAA,CADY,IAAI,eAAA,CAAgB,MAAA,CAAO,QAAA,CAAS,MAAM,CAAA,CAC5B,GAAA,CAAI,SAAS,CAAA,CAE7C,GAAIA,CAAAA,CACFpB,GAAAA,CAAUoB,CAAa,CAAA,CACvBvB,EAAe,CAAA,CAAI,CAAA,CAEnB,MAAA,CAAO,OAAA,CAAQ,YAAA,CAAa,GAAI,QAAA,CAAS,KAAA,CAAO,MAAA,CAAO,QAAA,CAAS,QAAQ,CAAA,CAIxE,aAAa,OAAA,CAAQ,iBAAA,CAAmBuB,CAAa,CAAA,CAAA,KAEhD,CAGL,IAAMC,EAAe,YAAA,CAAa,OAAA,CAAQ,iBAAiB,CAAA,CACvDA,CAAAA,GACFrB,GAAAA,CAAUqB,CAAY,CAAA,CACtBxB,CAAAA,CAAe,CAAA,CAAI,CAAA,EAGvB,CACF,CAAA,MAASqB,EAAK,CACZ,OAAA,CAAQ,KAAA,CAAM,2CAAA,CAA6CA,CAAG,EAEhE,QAAE,CACAhB,CAAAA,CAAa,KAAK,EACpB,CACF,CAAA,CAAG,CAACT,CAAAA,CAAQsB,CAAY,CAAC,CAAA,CAGzBO,SAAAA,CAAU,IAAM,CACdH,CAAAA,GACF,CAAA,CAAG,EAAE,CAAA,CAGLG,UAAU,IAAM,CACVvB,CAAAA,EAAUH,CAAAA,EAAe,CAACS,CAAAA,EAC5BU,IAEJ,CAAA,CAAG,CAAChB,CAAAA,CAAQH,CAAAA,CAAaS,CAAAA,CAAcU,CAAY,CAAC,CAAA,CAEpD,IAAMQ,CAAAA,CAAe,SAAY,CAC/B,GAAI,CAAC7B,CAAAA,EAAU,CAACD,CAAAA,CAAQ,CACtB,IAAM+B,EAAW,mDAAA,CACjB,MAAApB,CAAAA,CAASoB,CAAQ,CAAA,CACX,IAAI,MAAMA,CAAQ,CAC1B,CAEA,GAAI,CAEF,IAAMC,EAAa,IAAI,GAAA,CAAI,MAAA,CAAO,QAAA,CAAS,IAAI,CAAA,CAEzCC,EAAc,CAAA,EAAGD,CAAAA,CAAW,MAAM,CAAA,EAAGA,CAAAA,CAAW,QAAQ,GAG9D,GAAI,CAACC,CAAAA,CAAY,UAAA,CAAW,MAAA,CAAO,QAAA,CAAS,MAAM,CAAA,CAChD,MAAM,IAAI,KAAA,CAAM,qDAAqD,CAAA,CAGvE,IAAMC,CAAAA,CAAW,MAAM,KAAA,CACrB,CAAA,EAAGjC,CAAM,CAAA,0BAAA,EAA6B,mBAAmBgC,CAAW,CAAC,CAAA,CAAA,CACrE,CACE,MAAA,CAAQ,KAAA,CACR,QAAS,CACP,WAAA,CAAajC,CACf,CAEF,CACF,CAAA,CAAE,MAAOmC,CAAAA,EAAa,CAEpB,MAAA,OAAA,CAAQ,KAAA,CAAM,2CAAA,CAA6CA,CAAQ,EAC7D,IAAI,KAAA,CAAM,4DAA4D,CAC9E,CAAC,CAAA,CAED,GAAID,CAAAA,CAAS,EAAA,CAAI,CACf,IAAME,CAAAA,CAAO,MAAMF,EAAS,IAAA,EAAK,CAAE,KAAA,CAAM,IAAM,IAAI,CAAA,CACnD,GAAIE,CAAAA,EAAM,OAAA,CACR,MAAA,CAAO,QAAA,CAAS,IAAA,CAAOA,CAAAA,CAAK,aAE5B,MAAM,IAAI,KAAA,CAAM,2CAA2C,CAE/D,CAAA,KAAO,CACL,IAAMC,CAAAA,CAAY,MAAMH,CAAAA,CACrB,IAAA,EAAK,CACL,MAAM,KAAO,CAAE,MAAO,CAAE,OAAA,CAAS,0BAA2B,CAAE,CAAA,CAAE,CAAA,CACnE,MAAM,IAAI,KAAA,CAAMG,EAAU,KAAA,EAAO,OAAA,EAAW,0BAA0B,CACxE,CACF,CAAA,MAASZ,EAAK,CACZ,IAAMa,CAAAA,CACJb,CAAAA,YAAe,KAAA,CAAQA,CAAAA,CAAI,QAAU,qCAAA,CACvC,MAAA,OAAA,CAAQ,KAAA,CAAM,oDAAA,CAAsDA,CAAG,CAAA,CACvEd,EAAS2B,CAAY,CAAA,CAEfb,CACR,CACF,CAAA,CAEMc,CAAAA,CAAa,SAAY,CAC7B,GAAI,CAACjC,CAAAA,EAAU,CAACY,CAAAA,CAAS,CACvB,IAAMa,CAAAA,CAAW,iCAAA,CACjB,MAAApB,CAAAA,CAASoB,CAAQ,EACX,IAAI,KAAA,CAAMA,CAAQ,CAC1B,CAEA,GAAI,CAEF,MAAMb,CAAAA,CAAQ,UAAA,CAAWZ,CAAM,EACjC,CAAA,MAASmB,EAAK,CACZ,OAAA,CAAQ,KAAA,CAAM,qCAAA,CAAuCA,CAAG,EAG1D,QAAE,CAGAlB,GAAAA,CAAU,IAAI,CAAA,CACdH,CAAAA,CAAe,KAAK,EACpBS,CAAAA,CAAgB,IAAI,CAAA,CACpBE,CAAAA,CAAsB,IAAI,CAAA,CAC1BJ,EAAS,IAAI,CAAA,CACb,YAAA,CAAa,UAAA,CAAW,iBAAiB,EAC3C,CACF,CAAA,CAGM6B,CAAAA,CAAiBjB,WAAAA,CAAY,SAAY,CAC7C,GAAI,CAACpB,CAAAA,EAAe,CAACG,CAAAA,CACnB,MAAM,IAAI,KAAA,CAAM,2CAA2C,CAAA,CAE7D,MAAMgB,CAAAA,GACR,CAAA,CAAG,CAACnB,EAAaG,CAAAA,CAAQgB,CAAY,CAAC,CAAA,CAEhCmB,CAAAA,CAA6B,CACjC,OAAAzC,CAAAA,CACA,WAAA,CAAAG,CAAAA,CACA,MAAA,CAAAG,CAAAA,CACA,SAAA,CAAAE,EACA,KAAA,CAAAE,CAAAA,CACA,YAAA,CAAAoB,CAAAA,CACA,UAAA,CAAAS,CAAAA,CAEA,aAAA3B,CAAAA,CACA,kBAAA,CAAAE,CAAAA,CACA,cAAA,CAAAO,CAAAA,CACA,mBAAA,CAAAL,EACA,cAAA,CAAAwB,CAAAA,CAEA,IAAA,CAAA9C,CACF,CAAA,CAEA,OAAOgD,IAAC9C,EAAAA,CAAe,QAAA,CAAf,CAAwB,KAAA,CAAO6C,CAAAA,CAAQ,QAAA,CAAAvC,EAAS,CAC1D,CAOO,SAASyC,EAAAA,CAAgB,CAC9B,MAAA,CAAA3C,EACA,MAAA,CAAAC,CAAAA,CAAS,yBAAA,CACT,QAAA,CAAAC,CACF,CAAA,CAAyB,CAEvB,GAAM,CAAC0C,CAAW,CAAA,CAAIvC,QAAAA,CACpB,IACE,IAAIwC,WAAAA,CAAY,CACd,cAAA,CAAgB,CACd,OAAA,CAAS,CACP,UAAW,GAAA,CACX,MAAA,CAAQ,IAAA,CACR,KAAA,CAAO,CAACC,CAAAA,CAAcpC,IAAmB,CAEvC,IAAMe,CAAAA,CAAMf,CAAAA,CACZ,OAAIe,CAAAA,EAAK,QAAUA,CAAAA,CAAI,MAAA,EAAU,GAAA,EAAOA,CAAAA,CAAI,MAAA,CAAS,GAAA,CAAY,MAE1DqB,CAAAA,CAAe,CACxB,CAAA,CACA,oBAAA,CAAsB,KAAA,CACtB,kBAAA,CAAoB,IACtB,CAAA,CACA,SAAA,CAAW,CACT,KAAA,CAAO,CACT,CACF,CACF,CAAC,CACL,CAAA,CAEM,CAACC,CAAU,CAAA,CAAI1C,SAAS,IACvBL,CAAAA,CAGEN,CAAAA,CAAK,YAAA,CAAa,CACvB,WAAA,CAAasD,GACb,KAAA,CAAO,CACLC,aAAAA,CAAc,CACZ,GAAA,CAAK,CAAA,EAAGhD,CAAM,CAAA,KAAA,CAAA,CACd,QAAA,CAAU,EAAA,CACV,YAAA,CAAc,IAAA,CACd,MAAM,SAAU,CAEd,OAAO,CACL,WAAA,CAAaD,CACf,CACF,EACA,KAAA,CAAMkD,CAAAA,CAAKC,CAAAA,CAAS,CAClB,OAAO,KAAA,CAAMD,EAAK,CAChB,GAAGC,CAAAA,CAEH,SAAA,CAAW,IACb,CAAC,CACH,CACF,CAAC,CACH,CACF,CAAC,CAAA,CAzBmB,IA0BrB,CAAA,CAGD,OAAIJ,CAAAA,CAEAL,GAAAA,CAAChD,CAAAA,CAAK,QAAA,CAAL,CAAc,MAAA,CAAQqD,CAAAA,CAAY,WAAA,CAAaH,CAAAA,CAC9C,QAAA,CAAAF,GAAAA,CAACU,oBAAA,CAAoB,MAAA,CAAQR,CAAAA,CAC3B,QAAA,CAAAF,GAAAA,CAAC3C,EAAAA,CAAA,CAAuB,MAAA,CAAQC,CAAAA,CAAQ,MAAA,CAAQC,CAAAA,CAC7C,QAAA,CAAAC,CAAAA,CACH,EACF,CAAA,CACF,CAAA,CAMFwC,GAAAA,CAACU,mBAAAA,CAAA,CAAoB,MAAA,CAAQR,EAC3B,QAAA,CAAAF,GAAAA,CAAC3C,EAAAA,CAAA,CAAuB,MAAA,CAAQC,CAAAA,CAAQ,OAAQC,CAAAA,CAC7C,QAAA,CAAAC,CAAAA,CACH,CAAA,CACF,CAEJ,CAMO,SAASmD,CAAAA,EAAa,CAC3B,IAAM7B,CAAAA,CAAU8B,UAAAA,CAAW1D,EAAc,EACzC,GAAI,CAAC4B,CAAAA,CACH,MAAM,IAAI,KAAA,CAAM,gDAAgD,CAAA,CAElE,OAAOA,CACT,CAMO,SAAS+B,EAAAA,EAAoB,CAClC,IAAM/B,CAAAA,CAAU6B,CAAAA,EAAW,CAC3B,OAAO,CACL,aAAc7B,CAAAA,CAAQ,YAAA,CACtB,WAAA,CAAaA,CAAAA,CAAQ,kBAAA,CACrB,OAAA,CAASA,EAAQ,cAAA,CACjB,YAAA,CAAcA,CAAAA,CAAQ,mBAAA,CACtB,OAAA,CAASA,CAAAA,CAAQ,cACnB,CACF,CC5WO,SAASgC,CAAAA,CAAkBL,CAAAA,CAAoC,EAAC,CAAU,CAC/E,GAAM,CAAE,YAAA,CAAAM,CAAAA,CAAe,QAAS,aAAA,CAAAC,CAAc,CAAA,CAAIP,CAAAA,CAC5C,CAACQ,CAAAA,CAAOC,CAAQ,CAAA,CAAIvD,QAAAA,CAAgBoD,CAAY,CAAA,CAGhDI,CAAAA,CAAcC,MAAAA,CAAgC,IAAI,CAAA,CAClDC,CAAAA,CAAgBD,MAAAA,CAA8B,IAAI,CAAA,CAClDE,CAAAA,CAAiBF,OAA4B,IAAI,CAAA,CACjDG,CAAAA,CAAmBH,MAAAA,CAAOJ,CAAa,CAAA,CAC7C,OAAAO,CAAAA,CAAiB,OAAA,CAAUP,CAAAA,CAE3B7B,SAAAA,CAAU,IAAM,CACd,IAAMqC,CAAAA,CAAc,IAAM,CAMxB,IAAMC,CAAAA,CAJJ,QAAA,CAAS,gBAAgB,SAAA,CAAU,QAAA,CAAS,MAAM,CAAA,EAClD,QAAA,CAAS,IAAA,CAAK,UAAU,QAAA,CAAS,MAAM,CAAA,EACtC,MAAA,CAAO,UAAA,EAAc,MAAA,CAAO,WAAW,8BAA8B,CAAA,CAAE,QAEhD,MAAA,CAAS,OAAA,CACnCP,EAASO,CAAQ,CAAA,CACjBF,CAAAA,CAAiB,OAAA,GAAUE,CAAQ,EACrC,EAGAH,CAAAA,CAAe,OAAA,CAAUE,CAAAA,CAGzBA,CAAAA,EAAY,CAGZ,IAAME,EAAW,IAAI,gBAAA,CAAiBF,CAAW,CAAA,CACjDL,CAAAA,CAAY,OAAA,CAAUO,EACtBA,CAAAA,CAAS,OAAA,CAAQ,QAAA,CAAS,eAAA,CAAiB,CACzC,UAAA,CAAY,KACZ,eAAA,CAAiB,CAAC,OAAO,CAC3B,CAAC,CAAA,CAGD,IAAMC,CAAAA,CAAa,MAAA,CAAO,UAAA,CAAW,8BAA8B,CAAA,CACnE,OAAAN,EAAc,OAAA,CAAUM,CAAAA,CACxBA,CAAAA,CAAW,gBAAA,CAAiB,QAAA,CAAUH,CAAW,EAG1C,IAAM,CACPL,CAAAA,CAAY,OAAA,GACdA,CAAAA,CAAY,OAAA,CAAQ,YAAW,CAC/BA,CAAAA,CAAY,OAAA,CAAU,IAAA,CAAA,CAEpBE,CAAAA,CAAc,OAAA,EAAWC,EAAe,OAAA,GAC1CD,CAAAA,CAAc,OAAA,CAAQ,mBAAA,CAAoB,QAAA,CAAUC,CAAAA,CAAe,OAAO,CAAA,CAC1ED,CAAAA,CAAc,OAAA,CAAU,IAAA,CAAA,CAE1BC,CAAAA,CAAe,OAAA,CAAU,KAC3B,CACF,CAAA,CAAG,EAAE,CAAA,CAEEL,CACT,CCnEO,IAAMW,CAAAA,CAAe,CAC1B,KAAA,CAAO,CAEL,UAAA,CAAY,UACZ,UAAA,CAAY,SAAA,CACZ,IAAA,CAAM,SAAA,CACN,cAAA,CAAgB,SAAA,CAChB,QAAS,SAAA,CACT,iBAAA,CAAmB,SAAA,CACnB,OAAA,CAAS,SAAA,CACT,iBAAA,CAAmB,UACnB,SAAA,CAAW,SAAA,CACX,mBAAA,CAAqB,SAAA,CACrB,KAAA,CAAO,SAAA,CACP,gBAAiB,SAAA,CACjB,MAAA,CAAQ,SAAA,CACR,gBAAA,CAAkB,SAAA,CAClB,WAAA,CAAa,UACb,qBAAA,CAAuB,SAAA,CACvB,MAAA,CAAQ,SAAA,CACR,KAAA,CAAO,SAAA,CACP,KAAM,SAAA,CAEN,OAAA,CAAS,SAAA,CACT,iBAAA,CAAmB,SAAA,CACnB,OAAA,CAAS,UAET,IAAA,CAAM,SAAA,CACN,WAAA,CAAa,SACf,CAAA,CACA,IAAA,CAAM,CAEJ,UAAA,CAAY,SAAA,CACZ,UAAA,CAAY,SAAA,CACZ,IAAA,CAAM,SAAA,CACN,eAAgB,SAAA,CAChB,OAAA,CAAS,SAAA,CACT,iBAAA,CAAmB,SAAA,CACnB,OAAA,CAAS,UACT,iBAAA,CAAmB,SAAA,CACnB,SAAA,CAAW,SAAA,CACX,mBAAA,CAAqB,SAAA,CACrB,MAAO,SAAA,CACP,eAAA,CAAiB,SAAA,CACjB,MAAA,CAAQ,SAAA,CACR,gBAAA,CAAkB,UAClB,WAAA,CAAa,SAAA,CACb,qBAAA,CAAuB,SAAA,CACvB,MAAA,CAAQ,SAAA,CACR,MAAO,SAAA,CACP,IAAA,CAAM,SAAA,CAEN,OAAA,CAAS,SAAA,CACT,iBAAA,CAAmB,UACnB,OAAA,CAAS,SAAA,CAET,IAAA,CAAM,SAAA,CACN,WAAA,CAAa,SACf,CACF,CAAA,CAGaC,CAAAA,CAAa,CACxB,QAAA,CACE,4FAAA,CACF,QAAA,CACE,8FACF,QAAA,CAAU,CACR,EAAA,CAAI,SAAA,CACJ,EAAA,CAAI,UAAA,CACJ,KAAM,MAAA,CACN,EAAA,CAAI,UAAA,CACJ,EAAA,CAAI,SACN,CAAA,CACA,WAAY,CACV,MAAA,CAAQ,GAAA,CACR,MAAA,CAAQ,GAAA,CACR,QAAA,CAAU,IACV,IAAA,CAAM,GACR,CAAA,CACA,UAAA,CAAY,CACV,KAAA,CAAO,OACP,MAAA,CAAQ,KAAA,CACR,OAAA,CAAS,MACX,CACF,CAAA,CAGaC,EAAU,CACrB,CAAA,CAAG,GAAA,CACH,CAAA,CAAG,SAAA,CACH,CAAA,CAAG,SACH,CAAA,CAAG,SAAA,CACH,CAAA,CAAG,MAAA,CACH,CAAA,CAAG,SAAA,CACH,EAAG,QAAA,CACH,CAAA,CAAG,MACL,CAAA,CAGaC,CAAAA,CAAe,CAC1B,KAAM,GAAA,CACN,EAAA,CAAI,UAAA,CACJ,IAAA,CAAM,UAAA,CACN,EAAA,CAAI,SACJ,EAAA,CAAI,SAAA,CACJ,EAAA,CAAI,MAAA,CACJ,QAAA,CAAU,SAAA,CACV,KAAM,QACR,CAAA,CAGaC,CAAAA,CAAc,CACzB,IAAA,CAAM,gBAAA,CACN,KAAM,gBAAA,CACN,IAAA,CAAM,gBACR,CAAA,CAGaC,CAAAA,CAAY,CACvB,IAAK,8DAAA,CACL,MAAA,CAAQ,+DAAA,CACR,IAAA,CAAM,+DAAA,CAEN,OAAA,CAAS,+DACT,UAAA,CAAY,+DAAA,CACZ,QAAA,CAAU,+DACZ,CAAA,CAGaC,EAAAA,CAAW,IAAwB,CAC9C,GAAI,OAAO,MAAA,CAAW,GAAA,CAAa,OAAO,QAG1C,IAAMC,CAAAA,CACJ,QAAA,CAAS,eAAA,CAAgB,SAAA,CAAU,QAAA,CAAS,MAAM,CAAA,EAAK,QAAA,CAAS,IAAA,CAAK,SAAA,CAAU,QAAA,CAAS,MAAM,EAGhG,OAAI,CAACA,CAAAA,EAAU,MAAA,CAAO,UAAA,CACb,MAAA,CAAO,WAAW,8BAA8B,CAAA,CAAE,OAAA,CAAU,MAAA,CAAS,OAAA,CAGvEA,CAAAA,CAAS,OAAS,OAC3B,CAAA,CAGaC,EAAAA,CAAY,IAAM,CAC7B,IAAMnB,EAAQiB,EAAAA,EAAS,CACvB,OAAON,CAAAA,CAAaX,CAAK,CAC3B,EAIaoB,EAAAA,CAAiB,CAC5B,OAAA,CAAUC,CAAAA,GAAuB,CAC/B,eAAA,CAAiBA,EAAO,OAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,iBAAA,CACd,MAAA,CAAQ,MAAA,CACR,UAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,OAAA,CACxB,OAAA,CAAS,EACX,CACF,CAAA,CAAA,CACA,SAAA,CAAYA,CAAAA,GAAuB,CACjC,eAAA,CAAiBA,CAAAA,CAAO,UACxB,KAAA,CAAOA,CAAAA,CAAO,mBAAA,CACd,MAAA,CAAQ,MAAA,CACR,SAAA,CAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,SAAA,CACxB,OAAA,CAAS,EACX,CACF,GACA,OAAA,CAAUA,CAAAA,GAAuB,CAC/B,eAAA,CAAiBA,CAAAA,CAAO,UAAA,CACxB,MAAOA,CAAAA,CAAO,UAAA,CACd,MAAA,CAAQ,CAAA,UAAA,EAAaA,CAAAA,CAAO,MAAM,GAClC,SAAA,CAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,MAC1B,CACF,GACA,KAAA,CAAQA,CAAAA,GAAuB,CAC7B,eAAA,CAAiB,aAAA,CACjB,KAAA,CAAOA,EAAO,UAAA,CACd,MAAA,CAAQ,MAAA,CACR,SAAA,CAAW,CACT,eAAA,CAAiBA,EAAO,MAC1B,CACF,CAAA,CAAA,CACA,WAAA,CAAcA,CAAAA,GAAuB,CACnC,gBAAiBA,CAAAA,CAAO,WAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,qBAAA,CACd,MAAA,CAAQ,OACR,SAAA,CAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,WAAA,CACxB,OAAA,CAAS,EACX,CACF,CAAA,CAAA,CACA,QAAUA,CAAAA,GAAuB,CAC/B,gBAAiBA,CAAAA,CAAO,OAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,iBAAA,CACd,MAAA,CAAQ,OACR,SAAA,CAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,OAAA,CACxB,OAAA,CAAS,EACX,CACF,CAAA,CACF,CAAA,CAGaC,CAAAA,CAAc,CACzB,EAAA,CAAI,CACF,MAAA,CAAQ,MAAA,CACR,OAAA,CAAS,WAAA,CACT,QAAA,CAAUV,CAAAA,CAAW,SAAS,EAAA,CAC9B,GAAA,CAAK,UACP,CAAA,CACA,OAAA,CAAS,CACP,OAAQ,SAAA,CACR,OAAA,CAAS,QAAA,CACT,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,GAC9B,GAAA,CAAK,QACP,CAAA,CACA,EAAA,CAAI,CACF,MAAA,CAAQ,SACR,OAAA,CAAS,UAAA,CACT,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,IAAA,CAC9B,IAAK,QACP,CACF,CAAA,CAGaW,EAAAA,CAAmB,CAC9B,UAAA,CAAYX,EAAW,QAAA,CACvB,UAAA,CAAYA,CAAAA,CAAW,UAAA,CAAW,MAAA,CAClC,YAAA,CAAcE,EAAa,IAAA,CAC3B,UAAA,CAAYC,CAAAA,CAAY,IAAA,CACxB,MAAA,CAAQ,SAAA,CACR,QAAS,aAAA,CACT,UAAA,CAAY,QAAA,CACZ,cAAA,CAAgB,QAAA,CAChB,UAAA,CAAY,SACZ,OAAA,CAAS,MAAA,CACT,QAAA,CAAU,UAAA,CACV,YAAA,CAAc,CACZ,QAAS,EAAA,CACT,MAAA,CAAQ,aACV,CAAA,CACA,iBAAA,CAAmB,CACjB,QAAS,WAAA,CACT,aAAA,CAAe,KACjB,CACF,CAAA,CAGaS,EAAAA,CAAcH,IAAuB,CAChD,eAAA,CAAiBA,CAAAA,CAAO,IAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,eACd,MAAA,CAAQ,CAAA,UAAA,EAAaA,CAAAA,CAAO,MAAM,CAAA,CAAA,CAClC,YAAA,CAAcP,EAAa,EAAA,CAC3B,OAAA,CAASD,CAAAA,CAAQ,CAAC,CAAA,CAElB,SAAA,CAAW,MACb,CAAA,CAAA,CAGaY,EAAAA,CAA0B,CACrCC,CAAAA,CACAC,CAAAA,CACAC,CAAAA,IAEO,CACL,IAAA,CAAMF,CAAAA,CACN,KAAA,CAAOC,CAAAA,EAAcD,CAAAA,CACrB,MAAA,CAAQE,GAAeD,CAAAA,EAAcD,CACvC,CAAA,ECzPK,SAASG,EAAAA,CAAqB,CACnC,SAAA,CAAAC,CAAAA,CAAY,EAAA,CACZ,QAAA,CAAAvF,CAAAA,CAAW,eAAA,CACX,QAAAwF,CAAAA,CAAU,SAAA,CACV,IAAA,CAAAC,CAAAA,CAAO,SAAA,CACP,SAAA,CAAAC,EAAY,KAAA,CACZ,OAAA,CAAAC,CACF,CAAA,CAA8B,CAC5B,GAAM,CAAE,YAAA,CAAA/D,CAAAA,CAAc,WAAA,CAAA3B,CAAAA,CAAa,SAAA,CAAAK,CAAU,EAAI6C,CAAAA,EAAW,CACtDM,CAAAA,CAAQH,CAAAA,EAAkB,CAC1B,CAACsC,EAAWC,CAAY,CAAA,CAAI1F,QAAAA,CAAS,KAAK,CAAA,CAC1C,CAAC2F,EAAcC,CAAe,CAAA,CAAI5F,QAAAA,CAAS,KAAK,CAAA,CAChD,CAACK,EAAOC,CAAQ,CAAA,CAAIN,QAAAA,CAAwB,IAAI,CAAA,CAChD,CAAC6F,EAAWC,CAAY,CAAA,CAAI9F,QAAAA,CAAS,KAAK,CAAA,CAE1C2E,CAAAA,CAASV,EAAaX,CAAK,CAAA,CAEjC,GAAIxD,CAAAA,CACF,OAAO,IAAA,CAGT,IAAMiG,CAAAA,CAAgB,SAAY,CAChCH,CAAAA,CAAgB,IAAI,CAAA,CACpBtF,EAAS,IAAI,CAAA,CACbwF,CAAAA,CAAa,KAAK,CAAA,CAElB,GAAI,CACF,MAAMrE,CAAAA,GACR,CAAA,MAASL,CAAAA,CAAK,CAEZ,QAAQ,KAAA,CAAM,iDAAA,CAAmDA,CAAG,CAAA,CACpE,IAAMa,CAAAA,CAAe,uCACrB3B,CAAAA,CAAS2B,CAAY,CAAA,CACrB6D,CAAAA,CAAa,IAAI,CAAA,CAGbN,GACFA,CAAAA,CAAQvD,CAAY,CAAA,CAItB,UAAA,CAAW,IAAM6D,CAAAA,CAAa,KAAK,CAAA,CAAG,GAAI,EAC5C,CAAA,OAAE,CACAF,CAAAA,CAAgB,KAAK,EACvB,CACF,CAAA,CA2DMI,CAAAA,CAAAA,CAxDmB,IAAM,CAC7B,IAAMC,CAAAA,CAAkD,CACtD,OAAA,CAAS,CACP,eAAA,CAAiBtB,CAAAA,CAAO,QACxB,KAAA,CAAOA,CAAAA,CAAO,iBAAA,CACd,MAAA,CAAQ,MACV,CAAA,CACA,UAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,SAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,oBACd,MAAA,CAAQ,MACV,CAAA,CACA,OAAA,CAAS,CACP,eAAA,CAAiB,cACjB,KAAA,CAAOA,CAAAA,CAAO,UAAA,CACd,MAAA,CAAQ,CAAA,UAAA,EAAaA,CAAAA,CAAO,MAAM,CAAA,CACpC,CAAA,CACA,KAAA,CAAO,CACL,eAAA,CAAiB,aAAA,CACjB,MAAOA,CAAAA,CAAO,UAAA,CACd,MAAA,CAAQ,MACV,CAAA,CACA,OAAA,CAAS,CACP,eAAA,CAAiBA,CAAAA,CAAO,OAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,iBAAA,CACd,OAAQ,MACV,CACF,CAAA,CAEMuB,CAAAA,CAAmD,CACvD,OAAA,CAAS,CACP,eAAA,CAAiBvB,CAAAA,CAAO,OAAA,CACxB,OAAA,CAAS,EACX,CAAA,CACA,UAAW,CACT,eAAA,CAAiBA,CAAAA,CAAO,SAAA,CACxB,OAAA,CAAS,EACX,EACA,OAAA,CAAS,CACP,eAAA,CAAiBA,CAAAA,CAAO,MAC1B,CAAA,CACA,MAAO,CACL,eAAA,CAAiBA,CAAAA,CAAO,MAC1B,CAAA,CACA,OAAA,CAAS,CACP,eAAA,CAAiBA,CAAAA,CAAO,OAAA,CACxB,OAAA,CAAS,EACX,CACF,EAEA,OAAO,CACL,IAAA,CAAMsB,CAAAA,CAAWZ,CAAO,CAAA,CACxB,MAAOa,CAAAA,CAAYb,CAAO,CAC5B,CACF,CAAA,GAEuC,CACjCc,EAAavB,CAAAA,CAAYU,CAAI,CAAA,CAE7Bc,CAAAA,CAAoC,CAExC,UAAA,CAAYlC,EAAW,QAAA,CACvB,UAAA,CAAYA,CAAAA,CAAW,UAAA,CAAW,MAAA,CAClC,YAAA,CAAcE,EAAa,EAAA,CAC3B,UAAA,CAAYC,CAAAA,CAAY,IAAA,CACxB,MAAA,CAAQsB,CAAAA,EAAgBxF,EAAY,aAAA,CAAgB,SAAA,CACpD,OAAA,CAAS,aAAA,CACT,UAAA,CAAY,QAAA,CACZ,eAAgB,QAAA,CAChB,UAAA,CAAY,QAAA,CACZ,OAAA,CAAS,MAAA,CACT,QAAA,CAAU,WACV,KAAA,CAAOoF,CAAAA,CAAY,MAAA,CAAS,MAAA,CAG5B,GAAGY,CAAAA,CAGH,GAAGH,CAAAA,CAAc,IAAA,CACjB,MAAA,CAAQ,MAAA,CAGR,SAAA,CAAW;AAAA,gBAAA,EACGrB,EAAO,WAAW,CAAA;AAAA,gBAAA,EAClBA,EAAO,IAAI,CAAA;AAAA,MAAA,EACrBrB,CAAAA,GAAU,MAAA,CAASgB,CAAAA,CAAU,OAAA,CAAUA,EAAU,GAAG;AAAA,IAAA,CAAA,CAIxD,GAAImB,GAAa,CAACE,CAAAA,EAAgB,CAACxF,CAAAA,CAAY6F,CAAAA,CAAc,MAAQ,EAAC,CAGtE,QACEL,CAAAA,EAAgBxF,CAAAA,CACZ,GACAsF,CAAAA,EAAa,SAAA,GAAaO,EAAc,KAAA,CACtCA,CAAAA,CAAc,MAAM,OAAA,CACpB,CACV,EAGMK,CAAAA,CAAiB,IACrBhE,IAAC,KAAA,CAAA,CACC,KAAA,CAAM,KACN,MAAA,CAAO,IAAA,CACP,QAAQ,WAAA,CACR,KAAA,CAAO,CACL,SAAA,CAAW,yBACb,EAEA,QAAA,CAAAiE,IAAAA,CAAC,UACC,EAAA,CAAG,IAAA,CACH,GAAG,IAAA,CACH,CAAA,CAAE,KACF,MAAA,CAAO,cAAA,CACP,YAAY,GAAA,CACZ,IAAA,CAAK,OACL,eAAA,CAAgB,IAAA,CAChB,iBAAiB,IAAA,CAEjB,QAAA,CAAA,CAAAjE,IAAC,SAAA,CAAA,CACC,aAAA,CAAc,mBACd,GAAA,CAAI,IAAA,CACJ,OAAO,sBAAA,CACP,WAAA,CAAY,aACd,CAAA,CACAA,GAAAA,CAAC,WACC,aAAA,CAAc,mBAAA,CACd,IAAI,IAAA,CACJ,MAAA,CAAO,gBACP,WAAA,CAAY,YAAA,CACd,GACF,CAAA,CACF,CAAA,CAIIkE,EAA0C,CAC9C,QAAA,CAAU,WACV,MAAA,CAAQ,MAAA,CACR,KAAM,KAAA,CACN,SAAA,CAAW,kBAAA,CACX,YAAA,CAAcpC,CAAAA,CAAQ,CAAC,EACvB,eAAA,CAAiBQ,CAAAA,CAAO,YACxB,KAAA,CAAOA,CAAAA,CAAO,sBACd,OAAA,CAAS,CAAA,EAAGR,EAAQ,CAAC,CAAC,IAAIA,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,CACpC,YAAA,CAAcC,EAAa,IAAA,CAC3B,QAAA,CAAUF,EAAW,QAAA,CAAS,EAAA,CAC9B,WAAYA,CAAAA,CAAW,QAAA,CACvB,WAAY,QAAA,CACZ,OAAA,CAAS2B,EAAY,CAAA,CAAI,CAAA,CACzB,cAAe,MAAA,CACf,UAAA,CAAYxB,EAAY,IAAA,CACxB,MAAA,CAAQ,EACV,CAAA,CAEA,OACEiC,KAAAE,QAAAA,CAAA,CACE,QAAA,CAAA,CAAAF,IAAAA,CAAC,KAAA,CAAA,CACC,KAAA,CAAO,CACL,QAAA,CAAU,UAAA,CACV,QAAS,cAAA,CACT,KAAA,CAAOf,EAAY,MAAA,CAAS,MAC9B,EAEC,QAAA,CAAA,CAAAM,CAAAA,EAAaxF,GAASgC,GAAAA,CAAC,KAAA,CAAA,CAAI,MAAOkE,CAAAA,CAAqB,QAAA,CAAAlG,EAAM,CAAA,CAC9DgC,GAAAA,CAAC,UACC,OAAA,CAAS0D,CAAAA,CACT,SAAUJ,CAAAA,EAAgBxF,CAAAA,CAC1B,UAAWiF,CAAAA,CACX,KAAA,CAAOgB,EACP,YAAA,CAAc,IAAMV,EAAa,IAAI,CAAA,CACrC,aAAc,IAAMA,CAAAA,CAAa,KAAK,CAAA,CACtC,OAAA,CAAUe,GAAM,CAEdA,CAAAA,CAAE,aAAA,CAAc,KAAA,CAAM,SAAA,CAAY;AAAA,wBAAA,EACpB9B,EAAO,WAAW,CAAA;AAAA,wBAAA,EAClBA,EAAO,IAAI,CAAA;AAAA,wBAAA,EACXA,EAAO,IAAI,CAAA;AAAA,cAAA,EACrBrB,CAAAA,GAAU,MAAA,CAASgB,CAAAA,CAAU,OAAA,CAAUA,EAAU,GAAG;AAAA,YAAA,EAE1D,EACA,MAAA,CAASmC,CAAAA,EAAM,CAEbA,CAAAA,CAAE,aAAA,CAAc,MAAM,SAAA,CAAY;AAAA,wBAAA,EACpB9B,EAAO,WAAW,CAAA;AAAA,wBAAA,EAClBA,EAAO,IAAI,CAAA;AAAA,cAAA,EACrBrB,CAAAA,GAAU,MAAA,CAASgB,CAAAA,CAAU,OAAA,CAAUA,EAAU,GAAG;AAAA,YAAA,EAE1D,CAAA,CAEC,QAAA,CAAAqB,CAAAA,EAAgBxF,CAAAA,CACfmG,IAAAA,CAAC,MAAA,CAAA,CAAK,KAAA,CAAO,CAAE,OAAA,CAAS,MAAA,CAAQ,UAAA,CAAY,QAAA,CAAU,GAAA,CAAKnC,CAAAA,CAAQ,CAAC,CAAE,CAAA,CACpE,QAAA,CAAA,CAAA9B,GAAAA,CAACgE,CAAAA,CAAA,EAAe,CAAA,CAAE,eAAA,CAAA,CAEpB,CAAA,CAEAxG,CAAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACAwC,GAAAA,CAAC,OAAA,CAAA,CAAO,QAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAA,CAAA,CAKN,CAAA,CAAA,CACJ,CAEJ,CC1QO,SAASqE,EAAAA,CAAc,CAC5B,SAAA,CAAAtB,CAAAA,CAAY,EAAA,CACZ,aAAA,CAAAuB,CAAAA,CAAgB,gCAAA,CAChB,gBAAA,CAAAC,EAAmB,0CAAA,CACnB,cAAA,CAAAC,CAAAA,CAAiB,KAAA,CACjB,mBAAA,CAAAC,CAAAA,CAAsB,GACtB,OAAA,CAAAzB,CAAAA,CAAU,QACZ,CAAA,CAAuB,CACrB,GAAM,CAAE,WAAA,CAAAvF,CAAAA,CAAa,SAAA,CAAAK,CAAAA,CAAW,UAAA,CAAA+B,CAAW,CAAA,CAAIc,CAAAA,EAAW,CACpD,CAACM,CAAAA,CAAOC,CAAQ,CAAA,CAAIvD,QAAAA,CAA2B,OAAO,CAAA,CACtD,CAAC+G,CAAAA,CAAqBC,CAAsB,CAAA,CAAIhH,QAAAA,CAAS,KAAK,CAAA,CAGpEwB,SAAAA,CAAU,IAAM,CACd,IAAMqC,CAAAA,CAAc,IAAM,CACxB,IAAMW,CAAAA,CACJ,QAAA,CAAS,eAAA,CAAgB,SAAA,CAAU,QAAA,CAAS,MAAM,CAAA,EAClD,QAAA,CAAS,IAAA,CAAK,SAAA,CAAU,QAAA,CAAS,MAAM,GACtC,MAAA,CAAO,UAAA,EAAc,MAAA,CAAO,UAAA,CAAW,8BAA8B,CAAA,CAAE,QAC1EjB,CAAAA,CAASiB,CAAAA,CAAS,MAAA,CAAS,OAAO,EACpC,CAAA,CAEAX,GAAY,CAGZ,IAAME,CAAAA,CAAW,IAAI,gBAAA,CAAiBF,CAAW,CAAA,CACjDE,CAAAA,CAAS,OAAA,CAAQ,QAAA,CAAS,eAAA,CAAiB,CACzC,UAAA,CAAY,IAAA,CACZ,gBAAiB,CAAC,OAAO,CAC3B,CAAC,CAAA,CAED,IAAMC,EAAa,MAAA,CAAO,UAAA,CAAW,8BAA8B,CAAA,CACnE,OAAAA,CAAAA,CAAW,iBAAiB,QAAA,CAAUH,CAAW,CAAA,CAE1C,IAAM,CACXE,CAAAA,CAAS,UAAA,EAAW,CACpBC,CAAAA,CAAW,mBAAA,CAAoB,QAAA,CAAUH,CAAW,EACtD,CACF,EAAG,EAAE,CAAA,CAEL,IAAMc,CAAAA,CAASV,CAAAA,CAAaX,CAAK,CAAA,CA2C3B2D,CAAAA,CAAAA,CAxCqB,IAA2B,CACpD,IAAMhB,CAAAA,CAAkC,CACtC,UAAA,CAAY/B,CAAAA,CAAW,QAAA,CACvB,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,OAAA,CAAS,MAAA,CACT,UAAA,CAAY,QAAA,CACZ,GAAA,CAAKC,CAAAA,CAAQ,CAAC,CAChB,CAAA,CAEA,OAAQkB,CAAAA,EACN,KAAK,MAAA,CACH,OAAO,CACL,GAAGY,CAAAA,CACH,eAAA,CAAiBtB,CAAAA,CAAO,IAAA,CACxB,MAAOA,CAAAA,CAAO,cAAA,CACd,MAAA,CAAQ,CAAA,UAAA,EAAaA,CAAAA,CAAO,MAAM,CAAA,CAAA,CAClC,YAAA,CAAcP,CAAAA,CAAa,EAAA,CAC3B,OAAA,CAASD,CAAAA,CAAQ,CAAC,CAAA,CAClB,UAAW,MACb,CAAA,CACF,KAAK,OAAA,CACH,OAAO,CACL,GAAG8B,CAAAA,CACH,eAAA,CAAiBnG,CAAAA,CAAc6E,CAAAA,CAAO,OAAA,CAAUA,CAAAA,CAAO,KAAA,CACvD,MAAO7E,CAAAA,CAAc6E,CAAAA,CAAO,iBAAA,CAAoBA,CAAAA,CAAO,eAAA,CACvD,YAAA,CAAcP,CAAAA,CAAa,IAAA,CAC3B,OAAA,CAAS,CAAA,EAAGD,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,EAAIA,EAAQ,CAAC,CAAC,CAAA,CAAA,CACpC,QAAA,CAAUD,CAAAA,CAAW,QAAA,CAAS,GAC9B,UAAA,CAAYA,CAAAA,CAAW,UAAA,CAAW,MAAA,CAClC,OAAA,CAAS,aACX,EACF,KAAK,QAAA,CACL,QACE,OAAO,CACL,GAAG+B,CAAAA,CACH,KAAA,CAAOtB,CAAAA,CAAO,UAChB,CACJ,CACF,CAAA,GAE2C,CAErCuC,EAAqC,CACzC,KAAA,CAAOvC,CAAAA,CAAO,eAAA,CACd,UAAA,CAAYT,CAAAA,CAAW,SACvB,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,OAAA,CAAS,MAAA,CACT,WAAY,QAAA,CACZ,GAAA,CAAKC,CAAAA,CAAQ,CAAC,CAChB,CAAA,CAEMgD,CAAAA,CAA6C,CACjD,KAAA,CAAOxC,CAAAA,CAAO,OAAA,CACd,UAAA,CAAYT,CAAAA,CAAW,UAAA,CAAW,SAClC,QAAA,CAAUmB,CAAAA,GAAY,OAAA,CAAUnB,CAAAA,CAAW,QAAA,CAAS,EAAA,CAAKA,EAAW,QAAA,CAAS,EAC/E,CAAA,CAEMkD,CAAAA,CAAwC,CAC5C,KAAA,CAAOtH,EACHuF,CAAAA,GAAY,OAAA,CACVV,CAAAA,CAAO,iBAAA,CACPA,CAAAA,CAAO,OAAA,CACTA,CAAAA,CAAO,eAAA,CACX,UAAA,CAAYU,CAAAA,GAAY,OAAA,CAAUnB,CAAAA,CAAW,UAAA,CAAW,MAAA,CAASA,EAAW,UAAA,CAAW,MACzF,CAAA,CAEMmD,CAAAA,CAA8C,CAClD,UAAA,CAAYlD,CAAAA,CAAQ,CAAC,CAAA,CACrB,eAAA,CAAiB4C,CAAAA,CAAsBpC,CAAAA,CAAO,MAAA,CAAS,aAAA,CACvD,MAAOA,CAAAA,CAAO,WAAA,CACd,UAAA,CAAYT,CAAAA,CAAW,UAAA,CAAW,MAAA,CAClC,OAAA,CAAS,CAAA,EAAGC,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,EAAIA,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,CACpC,YAAA,CAAcC,CAAAA,CAAa,IAAA,CAC3B,MAAA,CAAQ,CAAA,UAAA,EAAaO,EAAO,WAAW,CAAA,CAAA,CACvC,MAAA,CAAQ,SAAA,CACR,UAAA,CAAYN,CAAAA,CAAY,KACxB,UAAA,CAAYH,CAAAA,CAAW,QAAA,CACvB,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,OAAA,CAAS,MACX,CAAA,CAGMmC,CAAAA,CAAiB,IACrBhE,GAAAA,CAAC,KAAA,CAAA,CACC,MAAM,IAAA,CACN,MAAA,CAAO,IAAA,CACP,OAAA,CAAQ,WAAA,CACR,KAAA,CAAO,CACL,SAAA,CAAW,yBAAA,CACX,KAAA,CAAOsC,CAAAA,CAAO,eAChB,CAAA,CAEA,SAAA2B,IAAAA,CAAC,QAAA,CAAA,CACC,EAAA,CAAG,IAAA,CACH,EAAA,CAAG,IAAA,CACH,CAAA,CAAE,IAAA,CACF,MAAA,CAAO,cAAA,CACP,WAAA,CAAY,GAAA,CACZ,IAAA,CAAK,MAAA,CACL,gBAAgB,IAAA,CAChB,gBAAA,CAAiB,IAAA,CAEjB,QAAA,CAAA,CAAAjE,GAAAA,CAAC,SAAA,CAAA,CACC,cAAc,kBAAA,CACd,GAAA,CAAI,IAAA,CACJ,MAAA,CAAO,sBAAA,CACP,WAAA,CAAY,aACd,CAAA,CACAA,GAAAA,CAAC,SAAA,CAAA,CACC,aAAA,CAAc,mBAAA,CACd,GAAA,CAAI,IAAA,CACJ,MAAA,CAAO,eAAA,CACP,WAAA,CAAY,YAAA,CACd,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAGF,OAAIlC,CAAAA,CAEAmG,IAAAA,CAAAE,QAAAA,CAAA,CACE,QAAA,CAAA,CAAAF,IAAAA,CAAC,KAAA,CAAA,CAAI,SAAA,CAAWlB,CAAAA,CAAW,KAAA,CAAO,CAAE,GAAG6B,CAAAA,CAAiB,GAAGC,CAAc,CAAA,CACvE,QAAA,CAAA,CAAA7E,GAAAA,CAACgE,CAAAA,CAAA,EAAe,CAAA,CAChBhE,GAAAA,CAAC,MAAA,CAAA,CAAK,QAAA,CAAA,YAAA,CAAU,CAAA,CAAA,CAClB,CAAA,CACAA,GAAAA,CAAC,OAAA,CAAA,CAAO,QAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAA,CAAA,CAKN,CAAA,CAAA,CACJ,CAAA,CAIAvC,CAAAA,CAEAwG,IAAAA,CAAC,OAAI,SAAA,CAAWlB,CAAAA,CAAW,KAAA,CAAO6B,CAAAA,CAChC,QAAA,CAAA,CAAA5E,GAAAA,CAAC,MAAA,CAAA,CAAK,KAAA,CAAO8E,EAAuB,QAAA,CAAA,QAAA,CAAC,CAAA,CACrC9E,GAAAA,CAAC,MAAA,CAAA,CAAK,KAAA,CAAO+E,CAAAA,CAAmB,QAAA,CAAAT,CAAAA,CAAc,EAC7CE,CAAAA,EACCxE,GAAAA,CAAC,QAAA,CAAA,CACC,OAAA,CAASH,EACT,SAAA,CAAW4E,CAAAA,CACX,KAAA,CAAOO,CAAAA,CACP,aAAc,IAAML,CAAAA,CAAuB,IAAI,CAAA,CAC/C,YAAA,CAAc,IAAMA,CAAAA,CAAuB,KAAK,EAChD,OAAA,CAAUP,CAAAA,EAAM,CACdA,CAAAA,CAAE,aAAA,CAAc,KAAA,CAAM,OAAA,CAAU,CAAA,UAAA,EAAa9B,EAAO,IAAI,CAAA,CAAA,CACxD8B,CAAAA,CAAE,aAAA,CAAc,KAAA,CAAM,aAAA,CAAgB,MACxC,CAAA,CACA,OAASA,CAAAA,EAAM,CACbA,CAAAA,CAAE,aAAA,CAAc,MAAM,OAAA,CAAU,OAClC,CAAA,CACD,QAAA,CAAA,YAAA,CAED,GAEJ,CAAA,CAKFpE,GAAAA,CAAC,KAAA,CAAA,CAAI,SAAA,CAAW+C,CAAAA,CAAW,KAAA,CAAO6B,CAAAA,CAChC,QAAA,CAAA5E,IAAC,MAAA,CAAA,CAAK,KAAA,CAAO+E,CAAAA,CAAmB,QAAA,CAAAR,CAAAA,CAAiB,CAAA,CACnD,CAEJ,CC9MO,SAASU,EAAAA,CAAcxE,CAAAA,CAAgC,EAAC,CAA8B,CAC3F,GAAM,CAAE,WAAA,CAAAyE,CAAAA,CAAc,MAAO,YAAA,CAAAC,CAAAA,CAAc,kBAAA,CAAAC,CAAmB,EAAI3E,CAAAA,CAE5D,CAAC4E,CAAAA,CAAQC,CAAiB,CAAA,CAAI3H,QAAAA,CAASuH,CAAW,CAAA,CAClD,CAAC5B,CAAAA,CAAciC,CAAuB,CAAA,CAAI5H,QAAAA,CAAS,KAAK,CAAA,CAGxD6H,CAAAA,CAAkBpE,MAAAA,CAAO+D,CAAY,EACrCM,CAAAA,CAAwBrE,MAAAA,CAAOgE,CAAkB,CAAA,CACvDI,CAAAA,CAAgB,OAAA,CAAUL,CAAAA,CAC1BM,CAAAA,CAAsB,QAAUL,CAAAA,CAEhC,IAAMM,CAAAA,CAAY7G,WAAAA,CAAa8G,CAAAA,EAAkB,CAC/CL,CAAAA,CAAkBK,CAAI,EACtBH,CAAAA,CAAgB,OAAA,GAAUG,CAAI,EAChC,CAAA,CAAG,EAAE,CAAA,CAECpC,EAAkB1E,WAAAA,CAAa+G,CAAAA,EAAwB,CAC3DL,CAAAA,CAAwBK,CAAU,CAAA,CAClCH,CAAAA,CAAsB,OAAA,GAAUG,CAAU,EAC5C,CAAA,CAAG,EAAE,CAAA,CAECD,CAAAA,CAAO9G,WAAAA,CAAY,IAAM6G,CAAAA,CAAU,IAAI,CAAA,CAAG,CAACA,CAAS,CAAC,CAAA,CACrDG,CAAAA,CAAQhH,WAAAA,CAAY,IAAM6G,EAAU,KAAK,CAAA,CAAG,CAACA,CAAS,CAAC,CAAA,CACvDI,CAAAA,CAASjH,WAAAA,CAAY,IAAM6G,CAAAA,CAAU,CAACL,CAAM,CAAA,CAAG,CAACA,CAAAA,CAAQK,CAAS,CAAC,CAAA,CAExE,OAAO,CACL,MAAA,CAAAL,CAAAA,CACA,YAAA,CAAA/B,CAAAA,CACA,IAAA,CAAAqC,CAAAA,CACA,KAAA,CAAAE,EACA,MAAA,CAAAC,CAAAA,CACA,aAAA,CAAevC,CACjB,CACF,CCjCO,SAASwC,EAAAA,CAAa,CAAE,OAAA,CAAAC,EAAS,SAAA,CAAAjD,CAAAA,CAAY,EAAA,CAAI,EAAA,CAAIkD,CAAS,CAAA,CAAsB,CAEzF,IAAMC,CAAAA,CAAcC,OAAM,CACpBC,CAAAA,CAAUH,CAAAA,EAAYC,CAAAA,CAGtB,CAAE,MAAA,CAAAb,CAAAA,CAAQ,YAAA,CAAA/B,EAAc,IAAA,CAAAqC,CAAAA,CAAM,KAAA,CAAAE,CAAAA,CAAO,cAAAQ,CAAc,CAAA,CAAIpB,EAAAA,EAAc,CACrEhE,EAAQH,CAAAA,EAAkB,CAE1B,CAAE,WAAA,CAAArD,CAAAA,CAAa,YAAA,CAAA2B,CAAAA,CAAc,UAAA,CAAAS,EAAY,SAAA,CAAWyG,CAAe,CAAA,CAAI3F,CAAAA,GACvE4F,CAAAA,CAAU1F,EAAAA,EAAkB,CAE5B,CAAC2F,EAAYC,CAAa,CAAA,CAAIhI,EAAAA,CAAM,QAAA,CAAwB,IAAI,CAAA,CAChE,CAAC+E,CAAAA,CAAWC,CAAY,CAAA,CAAIhF,EAAAA,CAAM,QAAA,CAAS,KAAK,CAAA,CAEhD6D,CAAAA,CAASV,CAAAA,CAAaX,CAAK,EAE3ByF,CAAAA,CAAqB,SAAY,CACrCL,CAAAA,CAAc,IAAI,CAAA,CAClBI,CAAAA,CAAc,IAAI,EAClBhD,CAAAA,CAAa,KAAK,CAAA,CAClB,GAAI,CACF,MAAMrE,CAAAA,GACR,CAAA,MAASL,EAAK,CAEZ,OAAA,CAAQ,KAAA,CAAM,yCAAA,CAA2CA,CAAG,CAAA,CAC5D0H,CAAAA,CAAc,yDAAyD,EACvEhD,CAAAA,CAAa,IAAI,CAAA,CAEjB,UAAA,CAAW,IAAMA,CAAAA,CAAa,KAAK,CAAA,CAAG,GAAI,EAC5C,CAAA,OAAE,CACA4C,CAAAA,CAAc,KAAK,EACrB,CACF,CAAA,CAEMM,EAAmB,SAAY,CACnC,GAAI,CACF,MAAM9G,CAAAA,GACR,CAAA,MAASd,CAAAA,CAAK,CAEZ,OAAA,CAAQ,KAAA,CAAM,yCAAA,CAA2CA,CAAG,EAE9D,CACF,CAAA,CAGM6H,CAAAA,CAAsBC,GAAuB,CACjD,IAAMC,EAAAA,CAAU,IAAA,CAAK,KAAA,CAAA,CAAO,IAAA,CAAK,GAAA,EAAI,CAAID,EAAK,OAAA,EAAQ,EAAK,GAAI,CAAA,CAE/D,GAAIC,EAAAA,CAAU,EAAA,CAAI,OAAO,WACzB,IAAMC,CAAAA,CAAU,IAAA,CAAK,KAAA,CAAMD,GAAU,EAAE,CAAA,CACvC,GAAIC,CAAAA,CAAU,GAAI,OAAO,CAAA,EAAGA,CAAO,CAAA,OAAA,EAAUA,CAAAA,GAAY,CAAA,CAAI,EAAA,CAAK,GAAG,OACrE,IAAMC,CAAAA,CAAQ,IAAA,CAAK,KAAA,CAAMD,EAAU,EAAE,CAAA,CACrC,GAAIC,CAAAA,CAAQ,GAAI,OAAO,CAAA,EAAGA,CAAK,CAAA,KAAA,EAAQA,CAAAA,GAAU,CAAA,CAAI,EAAA,CAAK,GAAG,OAC7D,IAAMC,EAAAA,CAAO,IAAA,CAAK,KAAA,CAAMD,EAAQ,EAAE,CAAA,CAClC,OAAO,CAAA,EAAGC,EAAI,CAAA,IAAA,EAAOA,EAAAA,GAAS,CAAA,CAAI,EAAA,CAAK,GAAG,CAAA,IAAA,CAC5C,CAAA,CAEM,CAAE,KAAAC,CAAAA,CAAM,OAAA,CAAApI,CAAQ,CAAA,CAAIqI,WAAAA,CAAY,CACpC,IAAA,CAAM9B,CAAAA,CACN,aAAe+B,CAAAA,EAAgB,CACzBA,CAAAA,CACFzB,CAAAA,EAAK,CAELE,CAAAA,GAEJ,CACF,CAAC,CAAA,CAEKwB,CAAAA,CAAQC,QAAAA,CAASxI,CAAO,EACxByI,CAAAA,CAAOC,OAAAA,CAAQ1I,CAAAA,CAAS,CAC5B,KAAM,QACR,CAAC,CAAA,CAEK,CAAE,iBAAA,CAAA2I,CAAkB,CAAA,CAAIC,eAAAA,CAAgB,CAACL,CAAAA,CAAOE,CAAI,CAAC,CAAA,CAErDI,GAA0C,CAC9C,OAAA,CAAS,MAAA,CACT,aAAA,CAAe,SACf,GAAA,CAAK7F,CAAAA,CAAQ,CAAC,CAChB,CAAA,CAEM8F,EAAAA,CAAqC,CACzC,QAAA,CAAU/F,EAAW,QAAA,CAAS,IAAA,CAC9B,UAAA,CAAYA,CAAAA,CAAW,WAAW,QAAA,CAClC,MAAA,CAAQ,CAAA,CACR,SAAA,CAAW,OACX,KAAA,CAAOS,CAAAA,CAAO,UAAA,CACd,UAAA,CAAYT,CAAAA,CAAW,QAAA,CACvB,SAAA,CAAW,QACb,EAEMgD,EAAAA,CAAqC,CACzC,OAAA,CAAS,MAAA,CACT,cAAA,CAAgB,QAAA,CAChB,KAAA,CAAOvC,CAAAA,CAAO,gBACd,UAAA,CAAYT,CAAAA,CAAW,QAAA,CACvB,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,EAChC,CAAA,CAEMgG,GAA6C,CACjD,OAAA,CAAS,MAAA,CACT,aAAA,CAAe,SACf,GAAA,CAAK/F,CAAAA,CAAQ,CAAC,CAChB,EAEMgG,EAAAA,CAAuC,CAC3C,OAAA,CAAS,MAAA,CACT,UAAA,CAAY,QAAA,CACZ,GAAA,CAAKhG,CAAAA,CAAQ,CAAC,CAAA,CACd,UAAA,CAAYD,CAAAA,CAAW,QAAA,CACvB,SAAUA,CAAAA,CAAW,QAAA,CAAS,EAChC,CAAA,CAEMkG,GAA8C,CAClD,KAAA,CAAOzF,CAAAA,CAAO,OAAA,CACd,UAAA,CAAYT,CAAAA,CAAW,UAAA,CAAW,QACpC,EAEMmG,EAAAA,CAAyC,CAC7C,KAAA,CAAO1F,CAAAA,CAAO,QACd,UAAA,CAAYT,CAAAA,CAAW,UAAA,CAAW,MACpC,EAEMoG,EAAAA,CAA2C,CAC/C,OAAA,CAAS,MAAA,CACT,UAAA,CAAY,QAAA,CACZ,GAAA,CAAKnG,CAAAA,CAAQ,CAAC,CAAA,CACd,QAAA,CAAUD,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,UAAA,CAAYA,CAAAA,CAAW,QACzB,EAEMqG,EAAAA,CAAyC,CAC7C,KAAA,CAAO5F,CAAAA,CAAO,eAChB,CAAA,CAEM6F,EAAAA,CAA2C,CAC/C,WAAY,MAAA,CACZ,MAAA,CAAQ,MAAA,CACR,KAAA,CAAO7F,EAAO,OAAA,CACd,MAAA,CAAQ,SAAA,CACR,QAAA,CAAUT,EAAW,QAAA,CAAS,EAAA,CAC9B,OAAA,CAAS,CAAA,CACT,cAAA,CAAgB,WAAA,CAChB,UAAA,CAAYA,CAAAA,CAAW,SACvB,UAAA,CAAYG,CAAAA,CAAY,IAC1B,CAAA,CAEMgD,EAAAA,CAA8C,CAClD,GAAGzC,CAAAA,CAAY,QACf,eAAA,CAAiBD,CAAAA,CAAO,SAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,mBAAA,CACd,UAAA,CAAYT,CAAAA,CAAW,WAAW,MAAA,CAClC,OAAA,CAAS,CAAA,EAAGC,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,EAAIA,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,CACpC,YAAA,CAAcC,CAAAA,CAAa,EAAA,CAC3B,MAAA,CAAQ,CAAA,UAAA,EAAaO,CAAAA,CAAO,IAAI,GAChC,MAAA,CAAQ,SAAA,CACR,UAAA,CAAYN,CAAAA,CAAY,IAAA,CACxB,KAAA,CAAO,MAAA,CACP,UAAA,CAAYH,EAAW,QAAA,CACvB,QAAA,CAAUA,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,SAAA,CAAW,oCACb,CAAA,CAEMuG,GAAyC,CAC7C,MAAA,CAAQ,CAAA,CACR,SAAA,CAAW,QACX,YAAA,CAActG,CAAAA,CAAQ,CAAC,CAAA,CACvB,QAAS,CAAA,EAAA,EAAKA,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,CACxB,KAAA,CAAOQ,CAAAA,CAAO,eAAA,CACd,SAAUT,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,UAAA,CAAYA,EAAW,UAAA,CAAW,OAAA,CAClC,UAAA,CAAYA,CAAAA,CAAW,SACvB,SAAA,CAAW,QACb,CAAA,CAEMwG,EAAAA,CAA2C,CAC/C,KAAA,CAAO,MAAA,CACP,eAAA,CAAiB/F,EAAO,OAAA,CACxB,KAAA,CAAOA,CAAAA,CAAO,iBAAA,CACd,WAAYT,CAAAA,CAAW,UAAA,CAAW,MAAA,CAClC,OAAA,CAAS,GAAGC,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,EAAIA,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,CACpC,aAAcC,CAAAA,CAAa,EAAA,CAC3B,MAAA,CAAQ,CAAA,UAAA,EAAaO,CAAAA,CAAO,IAAI,CAAA,CAAA,CAChC,MAAA,CAAQgB,EAAe,aAAA,CAAgB,SAAA,CACvC,UAAA,CAAYtB,CAAAA,CAAY,IAAA,CACxB,UAAA,CAAYH,CAAAA,CAAW,QAAA,CACvB,SAAUA,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,OAAA,CAAS,OACT,UAAA,CAAY,QAAA,CACZ,cAAA,CAAgB,QAAA,CAChB,QAASyB,CAAAA,CAAe,EAAA,CAAM,CAAA,CAC9B,SAAA,CAAW,oCACb,CAAA,CAEMgF,EAAAA,CAAqC,CACzC,QAAS,MAAA,CACT,UAAA,CAAY,QAAA,CACZ,GAAA,CAAKxG,CAAAA,CAAQ,CAAC,CAChB,CAAA,CAEMyG,GAAmC,CACvC,eAAA,CAAiB,CAAA,EAAGjG,CAAAA,CAAO,WAAW,CAAA,EAAA,CAAA,CACtC,MAAA,CAAQ,CAAA,UAAA,EAAaA,EAAO,WAAW,CAAA,EAAA,CAAA,CACvC,YAAA,CAAcP,CAAAA,CAAa,GAC3B,OAAA,CAAS,CAAA,EAAGD,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,EAAIA,CAAAA,CAAQ,CAAC,CAAC,CAAA,CAAA,CACpC,SAAA,CAAWA,CAAAA,CAAQ,CAAC,EACpB,KAAA,CAAOQ,CAAAA,CAAO,WAAA,CACd,QAAA,CAAUT,CAAAA,CAAW,QAAA,CAAS,EAAA,CAC9B,UAAA,CAAYA,EAAW,QAAA,CACvB,OAAA,CAAS2B,CAAAA,CAAY,OAAA,CAAU,MACjC,CAAA,CAEA,OACES,IAAAA,CAAAE,SAAA,CACE,QAAA,CAAA,CAAAnE,GAAAA,CAAC,KAAA,CAAA,CAAI,IAAKkH,CAAAA,CAAK,YAAA,CAAe,GAAGO,CAAAA,GAC9B,QAAA,CAAAzB,CAAAA,CACH,CAAA,CACCX,CAAAA,EACCrF,GAAAA,CAAC,KAAA,CAAA,CACC,KAAA,CAAO,CACL,UAAW8B,CAAAA,CAAQ,CAAC,CAAA,CACpB,OAAA,CAASA,EAAQ,CAAC,CAAA,CAClB,YAAA,CAAcC,CAAAA,CAAa,GAC3B,eAAA,CAAiBO,CAAAA,CAAO,IAAA,CACxB,MAAA,CAAQ,CAAA,UAAA,EAAaA,CAAAA,CAAO,MAAM,CAAA,CACpC,EACA,SAAA,CAAWS,CAAAA,CACX,IAAA,CAAK,QAAA,CACL,kBAAiB,CAAA,oBAAA,EAAuBqD,CAAO,CAAA,CAAA,CAC/C,kBAAA,CAAkB,6BAA6BA,CAAO,CAAA,CAAA,CAEtD,QAAA,CAAAnC,IAAAA,CAAC,KAAA,CAAA,CAAI,KAAA,CAAO0D,EAAAA,CACV,QAAA,CAAA,CAAA3H,IAAC,IAAA,CAAA,CAAG,EAAA,CAAI,CAAA,oBAAA,EAAuBoG,CAAO,CAAA,CAAA,CAAI,KAAA,CAAOwB,EAAAA,CAAe,QAAA,CAAA,oBAAA,CAEhE,EAECtB,CAAAA,CACCtG,GAAAA,CAAC,KAAA,CAAA,CAAI,KAAA,CAAO6E,EAAAA,CACV,QAAA,CAAA7E,GAAAA,CAAC,MAAA,CAAA,CAAK,sBAAU,CAAA,CAClB,CAAA,CACEvC,CAAAA,CACFwG,IAAAA,CAAC,OAAI,KAAA,CAAO4D,EAAAA,CACV,QAAA,CAAA,CAAA5D,IAAAA,CAAC,OAAI,KAAA,CAAO6D,EAAAA,CACV,QAAA,CAAA,CAAA9H,GAAAA,CAAC,MAAA,CAAA,CAAK,KAAA,CAAO+H,EAAAA,CAAwB,QAAA,CAAA,QAAA,CAAC,EACtC/H,GAAAA,CAAC,MAAA,CAAA,CAAK,KAAA,CAAOgI,EAAAA,CAAmB,QAAA,CAAA,gCAAA,CAA8B,CAAA,CAAA,CAChE,CAAA,CAECzB,CAAAA,CAAQ,aACPtC,IAAAA,CAAC,KAAA,CAAA,CAAI,KAAA,CAAOgE,EAAAA,CACV,QAAA,CAAA,CAAAjI,GAAAA,CAAC,MAAA,CAAA,CACC,KAAA,CAAO,CACL,QAAA,CAAU,MAAA,CACV,KAAA,CAAOuG,CAAAA,CAAQ,QAAUjE,CAAAA,CAAO,OAAA,CAAUA,CAAAA,CAAO,OACnD,EAEC,QAAA,CAAAiE,CAAAA,CAAQ,OAAA,CAAU,WAAA,CAAO,WAAA,CAC5B,CAAA,CACAtC,IAAAA,CAAC,MAAA,CAAA,CAAK,MAAOiE,EAAAA,CAAmB,QAAA,CAAA,CAAA,kBAAA,CACbtB,CAAAA,CAAmBL,CAAAA,CAAQ,WAAW,CAAA,CAAA,CACzD,CAAA,CACAvG,GAAAA,CAAC,UACC,OAAA,CAAS,IAAMuG,CAAAA,CAAQ,OAAA,EAAQ,CAC/B,QAAA,CAAUA,CAAAA,CAAQ,YAAA,CAClB,MAAO,CACL,GAAG4B,EAAAA,CACH,KAAA,CAAO5B,EAAQ,YAAA,CAAejE,CAAAA,CAAO,eAAA,CAAkBA,CAAAA,CAAO,QAC9D,MAAA,CAAQiE,CAAAA,CAAQ,YAAA,CAAe,aAAA,CAAgB,SAAA,CAC/C,cAAA,CAAgBA,CAAAA,CAAQ,YAAA,CAAe,OAAS,WAClD,CAAA,CACA,YAAA,CAAenC,CAAAA,EAAM,CACdmC,CAAAA,CAAQ,YAAA,GACXnC,CAAAA,CAAE,aAAA,CAAc,MAAM,OAAA,CAAU,KAAA,EAEpC,CAAA,CACA,YAAA,CAAeA,CAAAA,EAAM,CACnBA,CAAAA,CAAE,aAAA,CAAc,MAAM,OAAA,CAAU,IAClC,CAAA,CAEC,QAAA,CAAAmC,EAAQ,YAAA,CAAe,eAAA,CAAkB,SAAA,CAC5C,CAAA,CAAA,CACF,EAGFvG,GAAAA,CAAC,QAAA,CAAA,CACC,OAAA,CAAS2G,CAAAA,CACT,KAAA,CAAO3B,EAAAA,CACP,YAAA,CAAeZ,CAAAA,EAAM,CACnBA,CAAAA,CAAE,aAAA,CAAc,KAAA,CAAM,OAAA,CAAU,MAClC,CAAA,CACA,YAAA,CAAeA,CAAAA,EAAM,CACnBA,CAAAA,CAAE,aAAA,CAAc,KAAA,CAAM,OAAA,CAAU,IAClC,CAAA,CACD,QAAA,CAAA,YAAA,CAED,CAAA,CAAA,CACF,EAEAH,IAAAA,CAAC,KAAA,CAAA,CAAI,KAAA,CAAO4D,EAAAA,CACV,UAAA7H,GAAAA,CAAC,GAAA,CAAA,CAAE,EAAA,CAAI,CAAA,0BAAA,EAA6BoG,CAAO,CAAA,CAAA,CAAI,KAAA,CAAOgC,EAAAA,CAAmB,QAAA,CAAA,8GAAA,CAGzE,CAAA,CACApI,GAAAA,CAAC,QAAA,CAAA,CACC,OAAA,CAAS0G,EACT,QAAA,CAAUpD,CAAAA,CACV,KAAA,CAAO+E,EAAAA,CACP,aAAejE,CAAAA,EAAM,CACdd,CAAAA,GACHc,CAAAA,CAAE,cAAc,KAAA,CAAM,OAAA,CAAU,KAAA,EAEpC,CAAA,CACA,YAAA,CAAeA,CAAAA,EAAM,CACdd,CAAAA,GACHc,EAAE,aAAA,CAAc,KAAA,CAAM,OAAA,CAAU,GAAA,EAEpC,EAEC,QAAA,CAAAd,CAAAA,CACCW,IAAAA,CAAC,MAAA,CAAA,CAAK,MAAOqE,EAAAA,CACX,QAAA,CAAA,CAAAtI,GAAAA,CAAC,KAAA,CAAA,CACC,KAAA,CAAM,IAAA,CACN,MAAA,CAAO,IAAA,CACP,QAAQ,WAAA,CACR,KAAA,CAAO,CAAE,SAAA,CAAW,yBAA0B,CAAA,CAE9C,QAAA,CAAAiE,IAAAA,CAAC,UACC,EAAA,CAAG,IAAA,CACH,EAAA,CAAG,IAAA,CACH,CAAA,CAAE,IAAA,CACF,MAAA,CAAO,cAAA,CACP,YAAY,GAAA,CACZ,IAAA,CAAK,MAAA,CACL,eAAA,CAAgB,KAChB,gBAAA,CAAiB,IAAA,CAEjB,QAAA,CAAA,CAAAjE,GAAAA,CAAC,WACC,aAAA,CAAc,kBAAA,CACd,GAAA,CAAI,IAAA,CACJ,MAAA,CAAO,sBAAA,CACP,WAAA,CAAY,YAAA,CACd,EACAA,GAAAA,CAAC,SAAA,CAAA,CACC,aAAA,CAAc,mBAAA,CACd,IAAI,IAAA,CACJ,MAAA,CAAO,eAAA,CACP,WAAA,CAAY,aACd,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAM,eAAA,CAAA,CAER,CAAA,CAEA,mCAAA,CAEJ,CAAA,CACCwG,CAAAA,EAAcxG,IAAC,KAAA,CAAA,CAAI,KAAA,CAAOuI,EAAAA,CAAc,QAAA,CAAA/B,EAAW,CAAA,CAAA,CACtD,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,CAEFxG,IAAC,OAAA,CAAA,CAAO,QAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAA,CAAA,CAKN,GACJ,CAEJ","file":"chunk-RWDDD5Z4.js","sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport type { ReactNode } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { createTRPCReact } from '@trpc/react-query';\nimport { httpBatchLink } from '@trpc/client';\nimport superjson from 'superjson';\nimport { Persona } from '../client/index';\nimport type { AppRouter } from '../types/api-types';\n\n// Create tRPC React instance (types narrowed to any to simplify public d.ts)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst trpc = createTRPCReact<AppRouter>() as any;\n\ninterface KontextContextValue {\n  apiKey?: string;\n  isConnected: boolean;\n  userId: string | null;\n  isLoading: boolean;\n  error: string | null;\n  connectGmail: () => void;\n  disconnect: () => void;\n  // Profile caching\n  systemPrompt: string | null;\n  profileLastUpdated: Date | null;\n  isProfileStale: boolean;\n  isRefreshingProfile: boolean;\n  refreshProfile: () => Promise<void>;\n  // tRPC access (for advanced users)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trpc: any;\n}\n\nconst KontextContext = createContext<KontextContextValue | undefined>(undefined);\n\nexport interface KontextProviderProps {\n  apiKey?: string;\n  apiUrl?: string;\n  children: ReactNode;\n}\n\n// Profile cache TTL: 24 hours\nconst PROFILE_TTL = 24 * 60 * 60 * 1000;\n\n/**\n * Internal component that provides the actual Persona context\n */\nfunction KontextContextProvider({ apiKey, apiUrl, children }: KontextProviderProps) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Profile cache state\n  const [systemPrompt, setSystemPrompt] = useState<string | null>(null);\n  const [profileLastUpdated, setProfileLastUpdated] = useState<Date | null>(null);\n  const [isRefreshingProfile, setIsRefreshingProfile] = useState(false);\n\n  // Create a single Persona instance\n  const persona = React.useMemo(() => {\n    if (!apiKey) return null;\n    return new Persona({\n      apiKey,\n      apiUrl: apiUrl || 'https://api.kontext.dev',\n    });\n  }, [apiKey, apiUrl]);\n\n  // Calculate if profile is stale\n  const isProfileStale = profileLastUpdated\n    ? Date.now() - profileLastUpdated.getTime() > PROFILE_TTL\n    : true;\n\n  // Fetch profile data\n  const fetchProfile = useCallback(async () => {\n    if (!userId || !apiKey) return;\n\n    setIsRefreshingProfile(true);\n    setError(null);\n\n    try {\n      if (!persona) {\n        throw new Error('Persona client not initialized');\n      }\n\n      const context = await persona.getContext({\n        userId,\n        task: 'chat',\n        maxTokens: 500,\n      });\n\n      setSystemPrompt(context.systemPrompt);\n      setProfileLastUpdated(new Date());\n    } catch (err) {\n      console.debug('[Kontext SDK] Failed to fetch profile:', err);\n      // Don't propagate profile fetch errors - they're not critical\n      // Just log them for debugging\n    } finally {\n      setIsRefreshingProfile(false);\n    }\n  }, [userId, apiUrl, apiKey, persona]);\n\n  // Check connection status by attempting to fetch Gmail data\n  const checkConnection = useCallback(async () => {\n    if (!apiKey) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Get userId from URL params (OAuth callback) or local storage\n      const urlParams = new URLSearchParams(window.location.search);\n      const userIdFromUrl = urlParams.get('user_id');\n\n      if (userIdFromUrl) {\n        setUserId(userIdFromUrl);\n        setIsConnected(true);\n        // Clear URL params\n        window.history.replaceState({}, document.title, window.location.pathname);\n        // Store in localStorage for persistence\n        // TODO: Consider implementing client-side encryption for sensitive data\n        // or use sessionStorage for temporary session data\n        localStorage.setItem('persona_user_id', userIdFromUrl);\n        // Don't fetch profile here - let it happen after state updates\n      } else {\n        // Check localStorage for existing connection\n        // TODO: Consider implementing client-side encryption for sensitive data\n        const storedUserId = localStorage.getItem('persona_user_id');\n        if (storedUserId) {\n          setUserId(storedUserId);\n          setIsConnected(true);\n          // Profile will be fetched by the useEffect\n        }\n      }\n    } catch (err) {\n      console.debug('[Kontext SDK] Failed to check connection:', err);\n      // Don't propagate initialization errors - they're not critical\n    } finally {\n      setIsLoading(false);\n    }\n  }, [apiKey, fetchProfile]);\n\n  // Check connection on mount only\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  // Fetch profile when userId changes and is connected\n  useEffect(() => {\n    if (userId && isConnected && !systemPrompt) {\n      fetchProfile();\n    }\n  }, [userId, isConnected, systemPrompt, fetchProfile]);\n\n  const connectGmail = async () => {\n    if (!apiUrl || !apiKey) {\n      const errorMsg = 'API URL and API key required for Gmail connection';\n      setError(errorMsg);\n      throw new Error(errorMsg);\n    }\n\n    try {\n      // Validate and sanitize redirect URI to prevent open redirect attacks\n      const currentUrl = new URL(window.location.href);\n      // Only use origin + pathname, strip query params and fragments for security\n      const redirectUri = `${currentUrl.origin}${currentUrl.pathname}`;\n\n      // Additional validation: ensure redirect URI is from the same origin\n      if (!redirectUri.startsWith(window.location.origin)) {\n        throw new Error('Invalid redirect URI - must be from the same origin');\n      }\n\n      const response = await fetch(\n        `${apiUrl}/oauth/gmail?redirect_uri=${encodeURIComponent(redirectUri)}`,\n        {\n          method: 'GET',\n          headers: {\n            'x-api-key': apiKey, // API key in header, not URL\n          },\n          // Remove redirect: 'manual' - let the server send back the URL\n        },\n      ).catch((fetchErr) => {\n        // Handle network errors gracefully\n        console.debug('[Kontext SDK] Network error during OAuth:', fetchErr);\n        throw new Error('Network error. Please check your connection and try again.');\n      });\n\n      if (response.ok) {\n        const data = await response.json().catch(() => null);\n        if (data?.authUrl) {\n          window.location.href = data.authUrl;\n        } else {\n          throw new Error('No authorization URL received from server');\n        }\n      } else {\n        const errorData = await response\n          .json()\n          .catch(() => ({ error: { message: 'Failed to initiate OAuth' } }));\n        throw new Error(errorData.error?.message || 'Failed to initiate OAuth');\n      }\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Failed to initiate Gmail connection';\n      console.debug('[Kontext SDK] Failed to initiate Gmail connection:', err);\n      setError(errorMessage);\n      // Re-throw to let the modal handle the error display\n      throw err;\n    }\n  };\n\n  const disconnect = async () => {\n    if (!userId || !persona) {\n      const errorMsg = 'Must be connected to disconnect';\n      setError(errorMsg);\n      throw new Error(errorMsg);\n    }\n\n    try {\n      // Use the SDK's disconnect method\n      await persona.disconnect(userId);\n    } catch (err) {\n      console.debug('[Kontext SDK] Failed to disconnect:', err);\n      // Don't set error state for disconnect failures\n      // We'll still clear local state below\n    } finally {\n      // Always clear local state and storage, even if API call fails\n      // This ensures the UI properly updates to disconnected state\n      setUserId(null);\n      setIsConnected(false);\n      setSystemPrompt(null);\n      setProfileLastUpdated(null);\n      setError(null); // Clear any previous errors\n      localStorage.removeItem('persona_user_id');\n    }\n  };\n\n  // Manual profile refresh\n  const refreshProfile = useCallback(async () => {\n    if (!isConnected || !userId) {\n      throw new Error('User must be connected to refresh profile');\n    }\n    await fetchProfile();\n  }, [isConnected, userId, fetchProfile]);\n\n  const value: KontextContextValue = {\n    apiKey,\n    isConnected,\n    userId,\n    isLoading,\n    error,\n    connectGmail,\n    disconnect,\n    // Profile cache\n    systemPrompt,\n    profileLastUpdated,\n    isProfileStale,\n    isRefreshingProfile,\n    refreshProfile,\n    // tRPC access\n    trpc,\n  };\n\n  return <KontextContext.Provider value={value}>{children}</KontextContext.Provider>;\n}\n\n/**\n * KontextProvider component that wraps your app\n * Automatically includes tRPC and QueryClient setup internally\n * Similar to PrivyProvider but for Persona\n */\nexport function KontextProvider({\n  apiKey,\n  apiUrl = 'https://api.kontext.dev',\n  children,\n}: KontextProviderProps) {\n  // Create stable instances\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            staleTime: 10 * 60 * 1000, // 10 minutes for most data\n            gcTime: 30 * 60 * 1000, // 30 minutes in cache (was cacheTime in older versions)\n            retry: (failureCount, error: unknown) => {\n              // Don't retry on 4xx client errors\n              const err = error as { status?: number };\n              if (err?.status && err.status >= 400 && err.status < 500) return false;\n              // Retry up to 3 times with exponential backoff\n              return failureCount < 3;\n            },\n            refetchOnWindowFocus: false, // Avoid unnecessary refetches\n            refetchOnReconnect: true, // Refetch when network reconnects\n          },\n          mutations: {\n            retry: 1, // Only retry mutations once\n          },\n        },\n      }),\n  );\n\n  const [trpcClient] = useState(() => {\n    if (!apiKey) return null;\n\n    // Create tRPC client with API key authentication\n    return trpc.createClient({\n      transformer: superjson,\n      links: [\n        httpBatchLink({\n          url: `${apiUrl}/trpc`,\n          maxItems: 10, // Maximum number of operations in a single batch\n          maxURLLength: 2083, // Prevent URLs from becoming too long\n          async headers() {\n            // Pass API key in x-api-key header (more semantic for API keys)\n            return {\n              'x-api-key': apiKey,\n            };\n          },\n          fetch(url, options) {\n            return fetch(url, {\n              ...options,\n              // Add connection pooling for better performance\n              keepalive: true,\n            });\n          },\n        }),\n      ],\n    });\n  });\n\n  // Always wrap with tRPC and QueryClient providers when apiKey is available\n  if (trpcClient) {\n    return (\n      <trpc.Provider client={trpcClient} queryClient={queryClient}>\n        <QueryClientProvider client={queryClient}>\n          <KontextContextProvider apiKey={apiKey} apiUrl={apiUrl}>\n            {children}\n          </KontextContextProvider>\n        </QueryClientProvider>\n      </trpc.Provider>\n    );\n  }\n\n  // If no apiKey, just provide the basic KontextContext with QueryClient\n  return (\n    <QueryClientProvider client={queryClient}>\n      <KontextContextProvider apiKey={apiKey} apiUrl={apiUrl}>\n        {children}\n      </KontextContextProvider>\n    </QueryClientProvider>\n  );\n}\n\n/**\n * Hook to access Persona context\n * Must be used within KontextProvider\n */\nexport function useKontext() {\n  const context = useContext(KontextContext);\n  if (!context) {\n    throw new Error('useKontext must be used within KontextProvider');\n  }\n  return context;\n}\n\n/**\n * Hook to access just the profile data\n * Convenience hook for getting cached profile information\n */\nexport function useKontextProfile() {\n  const context = useKontext();\n  return {\n    systemPrompt: context.systemPrompt,\n    lastUpdated: context.profileLastUpdated,\n    isStale: context.isProfileStale,\n    isRefreshing: context.isRefreshingProfile,\n    refresh: context.refreshProfile,\n  };\n}\n","import { useState, useEffect, useRef } from 'react';\n\nexport type Theme = 'light' | 'dark';\n\nexport interface UseThemeDetectionOptions {\n  initialTheme?: Theme;\n  onThemeChange?: (theme: Theme) => void;\n}\n\n/**\n * Hook for detecting and tracking theme changes\n * Each instance maintains its own observers to prevent conflicts\n */\nexport function useThemeDetection(options: UseThemeDetectionOptions = {}): Theme {\n  const { initialTheme = 'light', onThemeChange } = options;\n  const [theme, setTheme] = useState<Theme>(initialTheme);\n\n  // Refs for cleanup tracking\n  const observerRef = useRef<MutationObserver | null>(null);\n  const mediaQueryRef = useRef<MediaQueryList | null>(null);\n  const detectThemeRef = useRef<(() => void) | null>(null);\n  const onThemeChangeRef = useRef(onThemeChange);\n  onThemeChangeRef.current = onThemeChange;\n\n  useEffect(() => {\n    const detectTheme = () => {\n      const isDark =\n        document.documentElement.classList.contains('dark') ||\n        document.body.classList.contains('dark') ||\n        (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n\n      const newTheme = isDark ? 'dark' : 'light';\n      setTheme(newTheme);\n      onThemeChangeRef.current?.(newTheme);\n    };\n\n    // Store ref for cleanup\n    detectThemeRef.current = detectTheme;\n\n    // Initial theme detection\n    detectTheme();\n\n    // Set up DOM observer for class changes\n    const observer = new MutationObserver(detectTheme);\n    observerRef.current = observer;\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n\n    // Set up media query listener for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    mediaQueryRef.current = mediaQuery;\n    mediaQuery.addEventListener('change', detectTheme);\n\n    // Cleanup function\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n        observerRef.current = null;\n      }\n      if (mediaQueryRef.current && detectThemeRef.current) {\n        mediaQueryRef.current.removeEventListener('change', detectThemeRef.current);\n        mediaQueryRef.current = null;\n      }\n      detectThemeRef.current = null;\n    };\n  }, []); // Empty dependency array - we want this to run once per hook instance\n\n  return theme;\n}\n","// Design tokens matching developer-dashboard design system\n// Self-contained - no external dependencies required\n\nexport const designTokens = {\n  light: {\n    // Core colors\n    background: '#ffffff',\n    foreground: '#0a0a0a',\n    card: '#ffffff',\n    cardForeground: '#0a0a0a',\n    popover: '#ffffff',\n    popoverForeground: '#0a0a0a',\n    primary: '#0066cc',\n    primaryForeground: '#ffffff',\n    secondary: '#fafafa',\n    secondaryForeground: '#0a0a0a',\n    muted: '#f5f5f5',\n    mutedForeground: '#666666',\n    accent: '#f5f5f5',\n    accentForeground: '#0a0a0a',\n    destructive: '#dc2626',\n    destructiveForeground: '#ffffff',\n    border: '#f0f0f0',\n    input: '#f0f0f0',\n    ring: '#0066cc',\n    // Success color for connected state\n    success: '#22c55e',\n    successForeground: '#ffffff',\n    warning: '#f59e0b',\n    // Brand colors for outline\n    zinc: '#71717a',\n    forestGreen: '#16a34a',\n  },\n  dark: {\n    // Core colors\n    background: '#0a0a0a',\n    foreground: '#f5f5f5',\n    card: '#0a0a0a',\n    cardForeground: '#f5f5f5',\n    popover: '#0a0a0a',\n    popoverForeground: '#f5f5f5',\n    primary: '#4d94ff',\n    primaryForeground: '#0a0a0a',\n    secondary: '#1a1a1a',\n    secondaryForeground: '#f5f5f5',\n    muted: '#1a1a1a',\n    mutedForeground: '#999999',\n    accent: '#1a1a1a',\n    accentForeground: '#f5f5f5',\n    destructive: '#ef4444',\n    destructiveForeground: '#f5f5f5',\n    border: '#262626',\n    input: '#262626',\n    ring: '#4d94ff',\n    // Success color for connected state\n    success: '#22c55e',\n    successForeground: '#0a0a0a',\n    warning: '#f59e0b',\n    // Brand colors for outline\n    zinc: '#a1a1aa',\n    forestGreen: '#22c55e',\n  },\n} as const;\n\n// Typography\nexport const typography = {\n  fontSans:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif\",\n  fontMono:\n    \"ui-monospace, 'SF Mono', Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono', monospace\",\n  fontSize: {\n    xs: '0.75rem', // 12px\n    sm: '0.875rem', // 14px\n    base: '1rem', // 16px\n    lg: '1.125rem', // 18px\n    xl: '1.25rem', // 20px\n  },\n  fontWeight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n  },\n  lineHeight: {\n    tight: '1.25',\n    normal: '1.5',\n    relaxed: '1.75',\n  },\n};\n\n// Spacing\nexport const spacing = {\n  0: '0',\n  1: '0.25rem', // 4px\n  2: '0.5rem', // 8px\n  3: '0.75rem', // 12px\n  4: '1rem', // 16px\n  5: '1.25rem', // 20px\n  6: '1.5rem', // 24px\n  8: '2rem', // 32px\n};\n\n// Border radius\nexport const borderRadius = {\n  none: '0',\n  sm: '0.125rem', // 2px\n  base: '0.375rem', // 6px (matches --radius)\n  md: '0.5rem', // 8px\n  lg: '0.75rem', // 12px\n  xl: '1rem', // 16px\n  squircle: '1.25rem', // 20px - for squircle shape\n  full: '9999px',\n};\n\n// Transitions\nexport const transitions = {\n  fast: 'all 150ms ease',\n  base: 'all 200ms ease',\n  slow: 'all 300ms ease',\n};\n\n// Elevation shadows\nexport const elevation = {\n  low: '0 2px 8px rgba(0, 0, 0, 0.08), 0 1px 2px rgba(0, 0, 0, 0.04)',\n  medium: '0 4px 16px rgba(0, 0, 0, 0.12), 0 2px 4px rgba(0, 0, 0, 0.06)',\n  high: '0 8px 32px rgba(0, 0, 0, 0.16), 0 4px 8px rgba(0, 0, 0, 0.08)',\n  // Dark mode shadows (lighter shadows for dark backgrounds)\n  lowDark: '0 2px 8px rgba(0, 0, 0, 0.32), 0 1px 2px rgba(0, 0, 0, 0.24)',\n  mediumDark: '0 4px 16px rgba(0, 0, 0, 0.48), 0 2px 4px rgba(0, 0, 0, 0.32)',\n  highDark: '0 8px 32px rgba(0, 0, 0, 0.64), 0 4px 8px rgba(0, 0, 0, 0.48)',\n};\n\n// Helper to detect dark mode\nexport const getTheme = (): 'light' | 'dark' => {\n  if (typeof window === 'undefined') return 'light';\n\n  // Check for .dark class on html or body\n  const isDark =\n    document.documentElement.classList.contains('dark') || document.body.classList.contains('dark');\n\n  // Fallback to media query\n  if (!isDark && window.matchMedia) {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }\n\n  return isDark ? 'dark' : 'light';\n};\n\n// Get current theme tokens\nexport const getTokens = () => {\n  const theme = getTheme();\n  return designTokens[theme];\n};\n\n// Button variant styles\ntype TokenType = typeof designTokens.light | typeof designTokens.dark;\nexport const buttonVariants = {\n  default: (tokens: TokenType) => ({\n    backgroundColor: tokens.primary,\n    color: tokens.primaryForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.primary,\n      opacity: 0.9,\n    },\n  }),\n  secondary: (tokens: TokenType) => ({\n    backgroundColor: tokens.secondary,\n    color: tokens.secondaryForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.secondary,\n      opacity: 0.8,\n    },\n  }),\n  outline: (tokens: TokenType) => ({\n    backgroundColor: tokens.background,\n    color: tokens.foreground,\n    border: `1px solid ${tokens.border}`,\n    '&:hover': {\n      backgroundColor: tokens.accent,\n    },\n  }),\n  ghost: (tokens: TokenType) => ({\n    backgroundColor: 'transparent',\n    color: tokens.foreground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.accent,\n    },\n  }),\n  destructive: (tokens: TokenType) => ({\n    backgroundColor: tokens.destructive,\n    color: tokens.destructiveForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.destructive,\n      opacity: 0.9,\n    },\n  }),\n  success: (tokens: TokenType) => ({\n    backgroundColor: tokens.success,\n    color: tokens.successForeground,\n    border: 'none',\n    '&:hover': {\n      backgroundColor: tokens.success,\n      opacity: 0.9,\n    },\n  }),\n};\n\n// Button size styles\nexport const buttonSizes = {\n  sm: {\n    height: '2rem', // 32px (h-8)\n    padding: '0 0.75rem', // px-3\n    fontSize: typography.fontSize.sm,\n    gap: '0.375rem', // gap-1.5\n  },\n  default: {\n    height: '2.25rem', // 36px (h-9)\n    padding: '0 1rem', // px-4\n    fontSize: typography.fontSize.sm,\n    gap: '0.5rem', // gap-2\n  },\n  lg: {\n    height: '2.5rem', // 40px (h-10)\n    padding: '0 1.5rem', // px-6\n    fontSize: typography.fontSize.base,\n    gap: '0.5rem', // gap-2\n  },\n};\n\n// Base button styles\nexport const baseButtonStyles = {\n  fontFamily: typography.fontSans,\n  fontWeight: typography.fontWeight.medium,\n  borderRadius: borderRadius.base,\n  transition: transitions.fast,\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  whiteSpace: 'nowrap' as const,\n  outline: 'none',\n  position: 'relative' as const,\n  '&:disabled': {\n    opacity: 0.5,\n    cursor: 'not-allowed',\n  },\n  '&:focus-visible': {\n    outline: `3px solid`,\n    outlineOffset: '2px',\n  },\n};\n\n// Card/Modal styles matching dashboard\nexport const cardStyles = (tokens: TokenType) => ({\n  backgroundColor: tokens.card,\n  color: tokens.cardForeground,\n  border: `1px solid ${tokens.border}`,\n  borderRadius: borderRadius.lg,\n  padding: spacing[6],\n  // No shadow - flat design\n  boxShadow: 'none',\n});\n\n// Helper to apply hover styles (since we can't use :hover in inline styles easily)\nexport const createInteractiveStyles = (\n  baseStyle: React.CSSProperties,\n  hoverStyle?: React.CSSProperties,\n  activeStyle?: React.CSSProperties,\n) => {\n  return {\n    base: baseStyle,\n    hover: hoverStyle || baseStyle,\n    active: activeStyle || hoverStyle || baseStyle,\n  };\n};\n","'use client';\n\nimport React, { useState } from 'react';\nimport { useKontext } from '../react/context';\nimport { useThemeDetection } from '../hooks/useThemeDetection';\nimport {\n  designTokens,\n  typography,\n  borderRadius,\n  transitions,\n  buttonSizes,\n  spacing,\n  elevation,\n} from './styles';\n\nexport interface KontextConnectButtonProps {\n  className?: string;\n  children?: React.ReactNode;\n  variant?: 'default' | 'secondary' | 'outline' | 'ghost' | 'success';\n  size?: 'sm' | 'default' | 'lg';\n  fullWidth?: boolean;\n  onError?: (error: string) => void;\n}\n\n/**\n * Button component to connect Gmail with built-in styling\n * Matches the developer-dashboard design system\n */\nexport function KontextConnectButton({\n  className = '',\n  children = 'Connect Gmail',\n  variant = 'default',\n  size = 'default',\n  fullWidth = false,\n  onError,\n}: KontextConnectButtonProps) {\n  const { connectGmail, isConnected, isLoading } = useKontext();\n  const theme = useThemeDetection();\n  const [isHovered, setIsHovered] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showError, setShowError] = useState(false);\n\n  const tokens = designTokens[theme];\n\n  if (isConnected) {\n    return null;\n  }\n\n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n    setShowError(false);\n\n    try {\n      await connectGmail();\n    } catch (err) {\n      // Silently catch any errors from connectGmail\n      console.debug('[KontextConnectButton] Connection error caught:', err);\n      const errorMessage = 'Unable to connect. Please try again.';\n      setError(errorMessage);\n      setShowError(true);\n\n      // Notify parent component if handler provided\n      if (onError) {\n        onError(errorMessage);\n      }\n\n      // Auto-hide error after 5 seconds\n      setTimeout(() => setShowError(false), 5000);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Get variant styles\n  const getVariantStyles = () => {\n    const baseStyles: Record<string, React.CSSProperties> = {\n      default: {\n        backgroundColor: tokens.primary,\n        color: tokens.primaryForeground,\n        border: 'none',\n      },\n      secondary: {\n        backgroundColor: tokens.secondary,\n        color: tokens.secondaryForeground,\n        border: 'none',\n      },\n      outline: {\n        backgroundColor: 'transparent',\n        color: tokens.foreground,\n        border: `1px solid ${tokens.border}`,\n      },\n      ghost: {\n        backgroundColor: 'transparent',\n        color: tokens.foreground,\n        border: 'none',\n      },\n      success: {\n        backgroundColor: tokens.success,\n        color: tokens.successForeground,\n        border: 'none',\n      },\n    };\n\n    const hoverStyles: Record<string, React.CSSProperties> = {\n      default: {\n        backgroundColor: tokens.primary,\n        opacity: 0.9,\n      },\n      secondary: {\n        backgroundColor: tokens.secondary,\n        opacity: 0.8,\n      },\n      outline: {\n        backgroundColor: tokens.accent,\n      },\n      ghost: {\n        backgroundColor: tokens.accent,\n      },\n      success: {\n        backgroundColor: tokens.success,\n        opacity: 0.9,\n      },\n    };\n\n    return {\n      base: baseStyles[variant],\n      hover: hoverStyles[variant],\n    };\n  };\n\n  const variantStyles = getVariantStyles();\n  const sizeStyles = buttonSizes[size];\n\n  const buttonStyles: React.CSSProperties = {\n    // Base styles\n    fontFamily: typography.fontSans,\n    fontWeight: typography.fontWeight.medium,\n    borderRadius: borderRadius.lg, // Squircle shape for button\n    transition: transitions.fast,\n    cursor: isConnecting || isLoading ? 'not-allowed' : 'pointer',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    whiteSpace: 'nowrap',\n    outline: 'none',\n    position: 'relative',\n    width: fullWidth ? '100%' : 'auto',\n\n    // Size styles\n    ...sizeStyles,\n\n    // Variant styles (but remove the border since we'll use box-shadow)\n    ...variantStyles.base,\n    border: 'none',\n\n    // Combine tri-color outline with elevation shadow\n    boxShadow: `\n      0 0 0 1px ${tokens.forestGreen},\n      0 0 0 2px ${tokens.zinc},\n      ${theme === 'dark' ? elevation.lowDark : elevation.low}\n    `,\n\n    // Hover state (applied conditionally)\n    ...(isHovered && !isConnecting && !isLoading ? variantStyles.hover : {}),\n\n    // Disabled state\n    opacity:\n      isConnecting || isLoading\n        ? 0.5\n        : isHovered && 'opacity' in variantStyles.hover\n          ? variantStyles.hover.opacity\n          : 1,\n  };\n\n  // Loading spinner component - matches modal animation\n  const LoadingSpinner = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      style={{\n        animation: 'spin 1s linear infinite',\n      }}\n    >\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n        fill=\"none\"\n        strokeDasharray=\"32\"\n        strokeDashoffset=\"32\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          dur=\"2s\"\n          values=\"0 32;16 16;0 32;0 32\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          values=\"0;-16;-32;-32\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n\n  // Error tooltip styles\n  const errorTooltipStyles: React.CSSProperties = {\n    position: 'absolute',\n    bottom: '100%',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    marginBottom: spacing[2],\n    backgroundColor: tokens.destructive,\n    color: tokens.destructiveForeground,\n    padding: `${spacing[1]} ${spacing[2]}`,\n    borderRadius: borderRadius.base,\n    fontSize: typography.fontSize.xs,\n    fontFamily: typography.fontSans,\n    whiteSpace: 'nowrap',\n    opacity: showError ? 1 : 0,\n    pointerEvents: 'none',\n    transition: transitions.fast,\n    zIndex: 10,\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          position: 'relative',\n          display: 'inline-block',\n          width: fullWidth ? '100%' : 'auto',\n        }}\n      >\n        {showError && error && <div style={errorTooltipStyles}>{error}</div>}\n        <button\n          onClick={handleConnect}\n          disabled={isConnecting || isLoading}\n          className={className}\n          style={buttonStyles}\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n          onFocus={(e) => {\n            // Add focus ring with increased offset to not overlap tri-color outline, keep elevation\n            e.currentTarget.style.boxShadow = `\n              0 0 0 1px ${tokens.forestGreen},\n              0 0 0 2px ${tokens.zinc},\n              0 0 0 5px ${tokens.ring},\n              ${theme === 'dark' ? elevation.lowDark : elevation.low}\n            `;\n          }}\n          onBlur={(e) => {\n            // Restore original tri-color outline with elevation\n            e.currentTarget.style.boxShadow = `\n              0 0 0 1px ${tokens.forestGreen},\n              0 0 0 2px ${tokens.zinc},\n              ${theme === 'dark' ? elevation.lowDark : elevation.low}\n            `;\n          }}\n        >\n          {isConnecting || isLoading ? (\n            <span style={{ display: 'flex', alignItems: 'center', gap: spacing[2] }}>\n              <LoadingSpinner />\n              Connecting...\n            </span>\n          ) : (\n            children\n          )}\n        </button>\n      </div>\n      <style>{`\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n      `}</style>\n    </>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useKontext } from '../react/context';\nimport { designTokens, typography, borderRadius, transitions, spacing } from './styles';\n\nexport interface KontextStatusProps {\n  className?: string;\n  connectedText?: string;\n  disconnectedText?: string;\n  showDisconnect?: boolean;\n  disconnectClassName?: string;\n  variant?: 'inline' | 'card' | 'badge';\n}\n\n/**\n * Component that shows connection status with consistent styling\n * Matches the developer-dashboard design system\n */\nexport function KontextStatus({\n  className = '',\n  connectedText = 'Personalized responses enabled',\n  disconnectedText = 'Connect Gmail for personalized responses',\n  showDisconnect = false,\n  disconnectClassName = '',\n  variant = 'inline',\n}: KontextStatusProps) {\n  const { isConnected, isLoading, disconnect } = useKontext();\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n  const [isDisconnectHovered, setIsDisconnectHovered] = useState(false);\n\n  // Update theme when component mounts and when theme changes\n  useEffect(() => {\n    const detectTheme = () => {\n      const isDark =\n        document.documentElement.classList.contains('dark') ||\n        document.body.classList.contains('dark') ||\n        (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n      setTheme(isDark ? 'dark' : 'light');\n    };\n\n    detectTheme();\n\n    // Listen for theme changes\n    const observer = new MutationObserver(detectTheme);\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    mediaQuery.addEventListener('change', detectTheme);\n\n    return () => {\n      observer.disconnect();\n      mediaQuery.removeEventListener('change', detectTheme);\n    };\n  }, []);\n\n  const tokens = designTokens[theme];\n\n  // Base container styles based on variant\n  const getContainerStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      fontFamily: typography.fontSans,\n      fontSize: typography.fontSize.sm,\n      display: 'flex',\n      alignItems: 'center',\n      gap: spacing[2],\n    };\n\n    switch (variant) {\n      case 'card':\n        return {\n          ...baseStyles,\n          backgroundColor: tokens.card,\n          color: tokens.cardForeground,\n          border: `1px solid ${tokens.border}`,\n          borderRadius: borderRadius.lg,\n          padding: spacing[4],\n          boxShadow: 'none',\n        };\n      case 'badge':\n        return {\n          ...baseStyles,\n          backgroundColor: isConnected ? tokens.success : tokens.muted,\n          color: isConnected ? tokens.successForeground : tokens.mutedForeground,\n          borderRadius: borderRadius.full,\n          padding: `${spacing[1]} ${spacing[3]}`,\n          fontSize: typography.fontSize.xs,\n          fontWeight: typography.fontWeight.medium,\n          display: 'inline-flex',\n        };\n      case 'inline':\n      default:\n        return {\n          ...baseStyles,\n          color: tokens.foreground,\n        };\n    }\n  };\n\n  const containerStyles = getContainerStyles();\n\n  const loadingStyles: React.CSSProperties = {\n    color: tokens.mutedForeground,\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.sm,\n    display: 'flex',\n    alignItems: 'center',\n    gap: spacing[2],\n  };\n\n  const statusIndicatorStyles: React.CSSProperties = {\n    color: tokens.success,\n    fontWeight: typography.fontWeight.semibold,\n    fontSize: variant === 'badge' ? typography.fontSize.xs : typography.fontSize.sm,\n  };\n\n  const statusTextStyles: React.CSSProperties = {\n    color: isConnected\n      ? variant === 'badge'\n        ? tokens.successForeground\n        : tokens.success\n      : tokens.mutedForeground,\n    fontWeight: variant === 'badge' ? typography.fontWeight.medium : typography.fontWeight.normal,\n  };\n\n  const disconnectButtonStyles: React.CSSProperties = {\n    marginLeft: spacing[2],\n    backgroundColor: isDisconnectHovered ? tokens.accent : 'transparent',\n    color: tokens.destructive,\n    fontWeight: typography.fontWeight.medium,\n    padding: `${spacing[1]} ${spacing[2]}`,\n    borderRadius: borderRadius.base,\n    border: `1px solid ${tokens.destructive}`,\n    cursor: 'pointer',\n    transition: transitions.fast,\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.xs,\n    outline: 'none',\n  };\n\n  // Loading spinner component\n  const LoadingSpinner = () => (\n    <svg\n      width=\"14\"\n      height=\"14\"\n      viewBox=\"0 0 24 24\"\n      style={{\n        animation: 'spin 1s linear infinite',\n        color: tokens.mutedForeground,\n      }}\n    >\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n        fill=\"none\"\n        strokeDasharray=\"32\"\n        strokeDashoffset=\"32\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          dur=\"2s\"\n          values=\"0 32;16 16;0 32;0 32\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          values=\"0;-16;-32;-32\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n\n  if (isLoading) {\n    return (\n      <>\n        <div className={className} style={{ ...containerStyles, ...loadingStyles }}>\n          <LoadingSpinner />\n          <span>Loading...</span>\n        </div>\n        <style>{`\n          @keyframes spin {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(360deg); }\n          }\n        `}</style>\n      </>\n    );\n  }\n\n  if (isConnected) {\n    return (\n      <div className={className} style={containerStyles}>\n        <span style={statusIndicatorStyles}>✓</span>\n        <span style={statusTextStyles}>{connectedText}</span>\n        {showDisconnect && (\n          <button\n            onClick={disconnect}\n            className={disconnectClassName}\n            style={disconnectButtonStyles}\n            onMouseEnter={() => setIsDisconnectHovered(true)}\n            onMouseLeave={() => setIsDisconnectHovered(false)}\n            onFocus={(e) => {\n              e.currentTarget.style.outline = `2px solid ${tokens.ring}`;\n              e.currentTarget.style.outlineOffset = '2px';\n            }}\n            onBlur={(e) => {\n              e.currentTarget.style.outline = 'none';\n            }}\n          >\n            Disconnect\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className} style={containerStyles}>\n      <span style={statusTextStyles}>{disconnectedText}</span>\n    </div>\n  );\n}\n","import { useState, useCallback, useRef } from 'react';\n\nexport interface ModalState {\n  isOpen: boolean;\n  isConnecting: boolean;\n}\n\nexport interface ModalActions {\n  open: () => void;\n  close: () => void;\n  toggle: () => void;\n  setConnecting: (connecting: boolean) => void;\n}\n\nexport interface UseModalStateOptions {\n  initialOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  onConnectingChange?: (connecting: boolean) => void;\n}\n\n/**\n * Hook for managing modal state with proper isolation between instances\n */\nexport function useModalState(options: UseModalStateOptions = {}): ModalState & ModalActions {\n  const { initialOpen = false, onOpenChange, onConnectingChange } = options;\n\n  const [isOpen, setIsOpenInternal] = useState(initialOpen);\n  const [isConnecting, setIsConnectingInternal] = useState(false);\n\n  // Use refs to store latest callbacks to avoid stale closures\n  const onOpenChangeRef = useRef(onOpenChange);\n  const onConnectingChangeRef = useRef(onConnectingChange);\n  onOpenChangeRef.current = onOpenChange;\n  onConnectingChangeRef.current = onConnectingChange;\n\n  const setIsOpen = useCallback((open: boolean) => {\n    setIsOpenInternal(open);\n    onOpenChangeRef.current?.(open);\n  }, []);\n\n  const setIsConnecting = useCallback((connecting: boolean) => {\n    setIsConnectingInternal(connecting);\n    onConnectingChangeRef.current?.(connecting);\n  }, []);\n\n  const open = useCallback(() => setIsOpen(true), [setIsOpen]);\n  const close = useCallback(() => setIsOpen(false), [setIsOpen]);\n  const toggle = useCallback(() => setIsOpen(!isOpen), [isOpen, setIsOpen]);\n\n  return {\n    isOpen,\n    isConnecting,\n    open,\n    close,\n    toggle,\n    setConnecting: setIsConnecting,\n  };\n}\n","'use client';\n\nimport React, { useId } from 'react';\nimport { useFloating, useClick, useRole, useInteractions } from '@floating-ui/react';\nimport { useKontext, useKontextProfile } from '../react/context';\nimport { useModalState } from '../hooks/useModalState';\nimport { useThemeDetection } from '../hooks/useThemeDetection';\nimport {\n  spacing,\n  typography,\n  borderRadius,\n  transitions,\n  buttonSizes,\n  designTokens,\n} from './styles';\n\nexport interface KontextModalProps {\n  trigger: React.ReactNode;\n  className?: string;\n  apiKey?: string;\n  apiUrl?: string;\n  id?: string; // Optional custom ID for the modal\n}\n\nexport function KontextModal({ trigger, className = '', id: customId }: KontextModalProps) {\n  // Generate unique ID for this modal instance\n  const generatedId = useId();\n  const modalId = customId || generatedId;\n\n  // Use custom hooks for isolated state management\n  const { isOpen, isConnecting, open, close, setConnecting } = useModalState();\n  const theme = useThemeDetection();\n\n  const { isConnected, connectGmail, disconnect, isLoading: personaLoading } = useKontext();\n  const profile = useKontextProfile();\n\n  const [localError, setLocalError] = React.useState<string | null>(null);\n  const [showError, setShowError] = React.useState(false);\n\n  const tokens = designTokens[theme];\n\n  const handleConnectGmail = async () => {\n    setConnecting(true);\n    setLocalError(null);\n    setShowError(false);\n    try {\n      await connectGmail();\n    } catch (err) {\n      // Silently catch any errors from connectGmail\n      console.debug('[KontextModal] Connection error caught:', err);\n      setLocalError('Unable to connect at this time. Please try again later.');\n      setShowError(true);\n      // Auto-hide error after 5 seconds\n      setTimeout(() => setShowError(false), 5000);\n    } finally {\n      setConnecting(false);\n    }\n  };\n\n  const handleDisconnect = async () => {\n    try {\n      await disconnect();\n    } catch (err) {\n      // Silently catch any errors from disconnect\n      console.debug('[KontextModal] Disconnect error caught:', err);\n      // Still close modal even if disconnect fails\n    }\n  };\n\n  // Helper function to format relative time\n  const formatRelativeTime = (date: Date): string => {\n    const seconds = Math.floor((Date.now() - date.getTime()) / 1000);\n\n    if (seconds < 60) return 'just now';\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 60) return `${minutes} minute${minutes === 1 ? '' : 's'} ago`;\n    const hours = Math.floor(minutes / 60);\n    if (hours < 24) return `${hours} hour${hours === 1 ? '' : 's'} ago`;\n    const days = Math.floor(hours / 24);\n    return `${days} day${days === 1 ? '' : 's'} ago`;\n  };\n\n  const { refs, context } = useFloating({\n    open: isOpen,\n    onOpenChange: (isModalOpen) => {\n      if (isModalOpen) {\n        open();\n      } else {\n        close();\n      }\n    },\n  });\n\n  const click = useClick(context);\n  const role = useRole(context, {\n    role: 'dialog',\n  });\n\n  const { getReferenceProps } = useInteractions([click, role]);\n\n  const modalContentStyles: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: spacing[3], // Reduced gap for tighter spacing\n  };\n\n  const headingStyles: React.CSSProperties = {\n    fontSize: typography.fontSize.base, // Reduced from lg to base\n    fontWeight: typography.fontWeight.semibold,\n    margin: 0,\n    marginTop: '-7px', // Move up by 7px\n    color: tokens.foreground,\n    fontFamily: typography.fontSans,\n    textAlign: 'center', // Center align to match description\n  };\n\n  const loadingStyles: React.CSSProperties = {\n    display: 'flex',\n    justifyContent: 'center',\n    color: tokens.mutedForeground,\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.sm,\n  };\n\n  const statusContainerStyles: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: spacing[3],\n  };\n\n  const statusRowStyles: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n    gap: spacing[2],\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.sm,\n  };\n\n  const successIndicatorStyles: React.CSSProperties = {\n    color: tokens.success,\n    fontWeight: typography.fontWeight.semibold,\n  };\n\n  const successTextStyles: React.CSSProperties = {\n    color: tokens.success,\n    fontWeight: typography.fontWeight.medium,\n  };\n\n  const profileStatusStyles: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n    gap: spacing[2],\n    fontSize: typography.fontSize.sm,\n    fontFamily: typography.fontSans,\n  };\n\n  const profileTimeStyles: React.CSSProperties = {\n    color: tokens.mutedForeground,\n  };\n\n  const refreshButtonStyles: React.CSSProperties = {\n    background: 'none',\n    border: 'none',\n    color: tokens.primary,\n    cursor: 'pointer',\n    fontSize: typography.fontSize.sm,\n    padding: 0,\n    textDecoration: 'underline',\n    fontFamily: typography.fontSans,\n    transition: transitions.fast,\n  };\n\n  const disconnectButtonStyles: React.CSSProperties = {\n    ...buttonSizes.default,\n    backgroundColor: tokens.secondary,\n    color: tokens.secondaryForeground,\n    fontWeight: typography.fontWeight.normal,\n    padding: `${spacing[2]} ${spacing[4]}`,\n    borderRadius: borderRadius.lg,\n    border: `1px solid ${tokens.zinc}`,\n    cursor: 'pointer',\n    transition: transitions.base,\n    width: '100%',\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.sm,\n    boxShadow: `0 0 12px rgba(255, 255, 255, 0.15)`, // Light white glow\n  };\n\n  const descriptionStyles: React.CSSProperties = {\n    margin: 0,\n    marginTop: '-15px', // Move up by 15px\n    marginBottom: spacing[3],\n    padding: `0 ${spacing[2]}`, // Add horizontal padding for breathing room\n    color: tokens.mutedForeground,\n    fontSize: typography.fontSize.sm,\n    lineHeight: typography.lineHeight.relaxed, // More relaxed line height\n    fontFamily: typography.fontSans,\n    textAlign: 'center', // Center align the text\n  };\n\n  const connectButtonStyles: React.CSSProperties = {\n    width: '100%',\n    backgroundColor: tokens.success,\n    color: tokens.successForeground,\n    fontWeight: typography.fontWeight.medium,\n    padding: `${spacing[3]} ${spacing[4]}`,\n    borderRadius: borderRadius.lg,\n    border: `1px solid ${tokens.zinc}`,\n    cursor: isConnecting ? 'not-allowed' : 'pointer',\n    transition: transitions.base,\n    fontFamily: typography.fontSans,\n    fontSize: typography.fontSize.sm,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    opacity: isConnecting ? 0.7 : 1,\n    boxShadow: `0 0 12px rgba(255, 255, 255, 0.15)`, // Light white glow\n  };\n\n  const spinnerStyles: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n    gap: spacing[2],\n  };\n\n  const errorStyles: React.CSSProperties = {\n    backgroundColor: `${tokens.destructive}15`,\n    border: `1px solid ${tokens.destructive}30`,\n    borderRadius: borderRadius.md,\n    padding: `${spacing[2]} ${spacing[3]}`,\n    marginTop: spacing[2],\n    color: tokens.destructive,\n    fontSize: typography.fontSize.sm,\n    fontFamily: typography.fontSans,\n    display: showError ? 'block' : 'none',\n  };\n\n  return (\n    <>\n      <div ref={refs.setReference} {...getReferenceProps()}>\n        {trigger}\n      </div>\n      {isOpen && (\n        <div\n          style={{\n            marginTop: spacing[3],\n            padding: spacing[4],\n            borderRadius: borderRadius.lg,\n            backgroundColor: tokens.card,\n            border: `1px solid ${tokens.border}`,\n          }}\n          className={className}\n          role=\"dialog\"\n          aria-labelledby={`kontext-modal-title-${modalId}`}\n          aria-describedby={`kontext-modal-description-${modalId}`}\n        >\n          <div style={modalContentStyles}>\n            <h2 id={`kontext-modal-title-${modalId}`} style={headingStyles}>\n              Kontext Connection\n            </h2>\n\n            {personaLoading ? (\n              <div style={loadingStyles}>\n                <span>Loading...</span>\n              </div>\n            ) : isConnected ? (\n              <div style={statusContainerStyles}>\n                <div style={statusRowStyles}>\n                  <span style={successIndicatorStyles}>✓</span>\n                  <span style={successTextStyles}>Personalized responses enabled</span>\n                </div>\n\n                {profile.lastUpdated && (\n                  <div style={profileStatusStyles}>\n                    <span\n                      style={{\n                        fontSize: '1rem',\n                        color: profile.isStale ? tokens.warning : tokens.success,\n                      }}\n                    >\n                      {profile.isStale ? '🟡' : '🟢'}\n                    </span>\n                    <span style={profileTimeStyles}>\n                      Profile updated {formatRelativeTime(profile.lastUpdated)}\n                    </span>\n                    <button\n                      onClick={() => profile.refresh()}\n                      disabled={profile.isRefreshing}\n                      style={{\n                        ...refreshButtonStyles,\n                        color: profile.isRefreshing ? tokens.mutedForeground : tokens.primary,\n                        cursor: profile.isRefreshing ? 'not-allowed' : 'pointer',\n                        textDecoration: profile.isRefreshing ? 'none' : 'underline',\n                      }}\n                      onMouseEnter={(e) => {\n                        if (!profile.isRefreshing) {\n                          e.currentTarget.style.opacity = '0.8';\n                        }\n                      }}\n                      onMouseLeave={(e) => {\n                        e.currentTarget.style.opacity = '1';\n                      }}\n                    >\n                      {profile.isRefreshing ? 'Refreshing...' : 'Refresh'}\n                    </button>\n                  </div>\n                )}\n\n                <button\n                  onClick={handleDisconnect}\n                  style={disconnectButtonStyles}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.opacity = '0.8';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.opacity = '1';\n                  }}\n                >\n                  Disconnect\n                </button>\n              </div>\n            ) : (\n              <div style={statusContainerStyles}>\n                <p id={`kontext-modal-description-${modalId}`} style={descriptionStyles}>\n                  Connect your Gmail to enable personalized AI responses based on your communication\n                  patterns and preferences.\n                </p>\n                <button\n                  onClick={handleConnectGmail}\n                  disabled={isConnecting}\n                  style={connectButtonStyles}\n                  onMouseEnter={(e) => {\n                    if (!isConnecting) {\n                      e.currentTarget.style.opacity = '0.9';\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (!isConnecting) {\n                      e.currentTarget.style.opacity = '1';\n                    }\n                  }}\n                >\n                  {isConnecting ? (\n                    <span style={spinnerStyles}>\n                      <svg\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        style={{ animation: 'spin 1s linear infinite' }}\n                      >\n                        <circle\n                          cx=\"12\"\n                          cy=\"12\"\n                          r=\"10\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"4\"\n                          fill=\"none\"\n                          strokeDasharray=\"32\"\n                          strokeDashoffset=\"32\"\n                        >\n                          <animate\n                            attributeName=\"stroke-dasharray\"\n                            dur=\"2s\"\n                            values=\"0 32;16 16;0 32;0 32\"\n                            repeatCount=\"indefinite\"\n                          />\n                          <animate\n                            attributeName=\"stroke-dashoffset\"\n                            dur=\"2s\"\n                            values=\"0;-16;-32;-32\"\n                            repeatCount=\"indefinite\"\n                          />\n                        </circle>\n                      </svg>\n                      Connecting...\n                    </span>\n                  ) : (\n                    'Connect Gmail for Personalization'\n                  )}\n                </button>\n                {localError && <div style={errorStyles}>{localError}</div>}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      <style>{`\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n      `}</style>\n    </>\n  );\n}\n"]}